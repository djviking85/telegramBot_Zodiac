package com.telebotZodiac.bot.listener;

import com.pengrad.telegrambot.TelegramBot;
import com.pengrad.telegrambot.UpdatesListener;
import com.pengrad.telegrambot.model.Update;
import com.pengrad.telegrambot.model.request.InlineKeyboardButton;
import com.pengrad.telegrambot.model.request.InlineKeyboardMarkup;
import com.pengrad.telegrambot.request.SendMessage;
import com.telebotZodiac.bot.service.ShelterService;
import com.telebotZodiac.bot.shelter.ShelterGoroskop;
import jakarta.annotation.PostConstruct;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.List;
import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;


@Service

public class TelegramBotUpdatesListener implements UpdatesListener {
    //    –¥–µ–ª–∞–µ–º —Å—Ç–∞—Ç–∏–∫–∏ –∫–Ω–æ–ø–æ–∫ –æ –∫–ª–∞—Å—Å–∏–∫–µ
    private static final String GOROSKOP_CLASSIC_BUTTON = "–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π –≥–æ—Ä–æ—Å–∫–æ–ø ‚ôà‚ôâ‚ôä‚ôã‚ôå‚ôç‚ôé";
    private static final String CALLBACK_SHOW_INFO_CLASSIC = "SHOW_INFO_CLASSIC";
    private static final String CALLBACK_SHOW_DESCRIPTION_CLASSIC = "SHOW_INSTRUCTION_CLASSIC";


//    –¥–µ–ª–∞–µ–º –∫–Ω–æ–ø–∫–∏ –æ –∫–∏—Ç–∞–π—Å–∫–æ–º

    private static final String GOROSKOP_CHINA_BUTTON = "–ö–∏—Ç–∞–π—Å–∫–∏–π –≥–æ—Ä–æ—Å–∫–æ–ø üêÄüêÇüêÖüêáüêâüêçüêé";
    private static final String CALLBACK_SHOW_INFO_CHINA = "SHOW_INFO_CHINA";
    private static final String CALLBACK_SHOW_DESCRIPTION_CHINA = "SHOW_INSTRUCTION_CHINA";


    private static final Pattern PATTERN = Pattern.compile("(^[+|8][0-9\\s]+)\\s(\\w*@.+\\D$)");
    // –¥–µ–ª–∞–µ–º –ª–æ–≥–∏ –ø–æ –ª–∏—Å—Ç–µ–Ω–µ—Ä—É
    private Logger logger = LoggerFactory.getLogger(TelegramBotUpdatesListener.class);


    //       @Autowired
    private TelegramBot telegramBot;

    private final ShelterService shelterService;


    public TelegramBotUpdatesListener(TelegramBot telegramBot, ShelterService shelterService) {
        this.telegramBot = telegramBot;
        this.shelterService = shelterService;
    }

    @PostConstruct
    public void init() {
        telegramBot.setUpdatesListener(this);
    }

//    —Å–æ–∑–¥–∞–Ω–∏–µ —Å—Ç–∞—Ä—Ç–∞, –∏ –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–∏–µ –ø–∞—Ç—Ç–µ—Ä–Ω–∞, –ø–∞—Ç—Ç–µ–Ω—Ä –ø—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –æ—à–∏–±–∫–∏


    @Override
    public int process(List<Update> updates) {
        updates.forEach(update -> {
            logger.info("Processing update: {}", update);
            if (update.message() != null && "/start".equals(update.message().text())) {
                startMessage(update);
            } else if (update.callbackQuery() != null) {
                processCallbackQuery(update);

//—Ç–∞–∫ –º—ã –ø–æ–ª—É—á–∞–µ–º –≤–æ–¥–æ–ª–µ—è –ø—Ä–∏ –≤–≤–µ–¥–µ–Ω–∏–∏ 01.02 - —Ç–µ —Ä–∞–±–æ—á–∏–π –∫–æ–¥
//            } else if (update.message() != null && "01.02".equals(update.message().text())) {

            } else if (update.message() != null && update.message().text().equals(update.message().text())) {
                String messageText2 = update.message().text();
                String name = update.message().chat().firstName();

                String msg = "–ü—Ä–∏–≤–µ—Ç, —á–µ–ª–æ–≤–µ–∫ –º–∏—Ä–∞:  " + name;
                long chatId = update.message().chat().id();

                SendMessage sendMessage = new SendMessage(chatId, msg);
                telegramBot.execute(sendMessage);

                if (messageText2.matches("\\d{2}:\\d{2}:\\d{4}")) {
                    // –ü–∞—Ä—Å–∏–º –¥–µ–Ω—å, –º–µ—Å—è—Ü –∏ –≥–æ–¥ –∏–∑ —Ç–µ–∫—Å—Ç–∞
                    String[] dateChinaParts = messageText2.split(":");

                    int day = Integer.parseInt(dateChinaParts[0]);
//                    if (day <= 0 && day > 31) {
//                        System.out.println("–∏–Ω–∫–æ—Ä–µ—Ä–∫—Ç –¥–µ–π");
//                    }
                    int month = Integer.parseInt(dateChinaParts[1]);
                    int year = Integer.parseInt(dateChinaParts[2]);

                    String horoscopeChina = calculateChineseHoroscope(day, month, year);


                    SendMessage sendMessageChinaCorrect = new SendMessage(chatId, horoscopeChina);
                    telegramBot.execute(sendMessageChinaCorrect);

                } else if (update.message() != null && update.message().text().equals(update.message().text())) {

                    String messageText = update.message().text();
                    String name2 = update.message().chat().firstName();

//                    String msg2 = "–ü—Ä–∏–≤–µ—Ç, –Ω—É–∂–Ω–æ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∏–ª–∏ –∏–ª–∏ " + name2;
                    long chatId2 = update.message().chat().id();

//                    SendMessage sendMessage3 = new SendMessage(chatId2, msg2);
//                    telegramBot.execute(sendMessage3);

                    if (messageText.matches("[0-3]?[0-9].[0-1]?[0-9]")) {
                        String[] dateParts = messageText.split("\\.");
                        int day = Integer.parseInt(dateParts[0]);
                        int month = Integer.parseInt(dateParts[1]);
//
                        String zodiacSign = getZodiacSign(day, month);
//
                        SendMessage sendMessage2 = new SendMessage(chatId2, "–í–∞—à –∑–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞: " + zodiacSign);
                        telegramBot.execute(sendMessage2);
                    } else {
                        SendMessage sendMessage4 = new SendMessage(chatId, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –¥–µ–Ω—å –∏ –º–µ—Å—è—Ü –≤ —Ñ–æ—Ä–º–∞—Ç–µ '–¥–¥.–º–º' (–ü—Ä–∏–º–µ—Ä 19.11) - –¥–ª—è –µ–≤—Ä–æ–ø–µ–π—Å–∫–æ–≥–æ –∫–∞–ª–µ–Ω–¥–∞—Ä—è, –∞ –≤–æ—Ç –¥–ª—è –∫–∏—Ç–∞–π—Å–∫–æ–≥–æ –Ω–∞–¥–æ –≤–≤–µ—Å—Ç–∏ —Ñ–æ—Ä–º–∞—Ç –¥–¥:–º–º:–≥–≥–≥–≥ , –ø—Ä–∏–º–µ—Ä 19:11:1985");
                        telegramBot.execute(sendMessage4);
                    }
                }

//                {
//                    SendMessage sendMessageChinaWrong = new SendMessage(chatId, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ dd:MM:HHHH");
//                    telegramBot.execute(sendMessageChinaWrong);
//                }
            }
//–ø—Ä–æ–±–ª–µ–º–∞ —Ç—É—Ç –≤–æ—Ç –≤ —á–µ–º - –Ω–∞–¥–æ —Å–¥–µ–ª–∞—Ç—å —Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ –º–µ–∂–¥—É –µ–≤—Ä–æ –∏ –∫–∏—Ç–∞–µ–º
//            else if (update.message() != null && update.message().text().equals(update.message().text())) {
//
//                String messageText = update.message().text();
//                String name = update.message().chat().firstName();
//
//                String msg = "–ü—Ä–∏–≤–µ—Ç, " + name;
//                long chatId = update.message().chat().id();
//
//                SendMessage sendMessage = new SendMessage(chatId, msg);
//                telegramBot.execute(sendMessage);
//
//                    if (messageText.matches("[0-3]?[0-9].[0-1]?[0-9]")) {
//                        String[] dateParts = messageText.split("\\.");
//                        int day = Integer.parseInt(dateParts[0]);
//                        int month = Integer.parseInt(dateParts[1]);
////
//                        String zodiacSign = getZodiacSign(day, month);
////
//                      SendMessage sendMessage2 = new SendMessage(chatId, "–í–∞—à –∑–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞: " + zodiacSign);
//                        telegramBot.execute(sendMessage2);
//                    } else {
//                        SendMessage sendMessage3 = new SendMessage(chatId, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –¥–µ–Ω—å –∏ –º–µ—Å—è—Ü –≤ —Ñ–æ—Ä–º–∞—Ç–µ '–¥–¥.–º–º'");
//                        telegramBot.execute(sendMessage3);
//                    }
//            }
//            else {
//                failedMessage(update.message().chat().id());
//            }
        });
        return UpdatesListener.CONFIRMED_UPDATES_ALL;
    }


    public void startMessage(Update update) {
        String name = update.message().chat().firstName();
        String msg = "–ü—Ä–∏–≤–µ—Ç, " + name + "! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç-–≥–æ—Ä–æ—Å–∫–æ–ø." +
                " –ù–∞–º–∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω—ã –≥–æ—Ä–æ—Å–∫–æ–ø—ã —Ä–∞–∑–Ω—ã—Ö –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π: –ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π –∏ –ö–∏—Ç–∞–π—Å–∫–∏–π" +
                " –í—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≥–æ—Ä–æ—Å–∫–æ–ø–µ,  " +
                "–∞ —Ç–∞–∫ –∂–µ –ø–æ –¥–∞—Ç–µ —Ä–æ–∂–¥–µ–Ω–∏—è –≤—ã –º–æ–∂–µ—Ç–µ —É–∑–Ω–∞—Ç—å —á—É—Ç—å –±–æ–ª—å—à–µ –æ —Å–µ–±–µ.";

//        updates.forEach(update -> {
//            logger.info("Processing update: {}", update);
//            String msg = update.message().text();
//            if (msg.equals("/start")) {
//                SendMessage message = new SendMessage(
//                        update.message().chat().id(),
//                        String.format("–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ %s, –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç-–≥–æ—Ä–æ—Å–∫–æ–ø.  –í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ dd.MM.yyyy (–ø—Ä–∏–º–µ—Ä: 12.02.2023) –∏ –≤—ã —É–∑–Ω–∞–µ—Ç–µ, —á—Ç–æ –æ–∂–∏–¥–∞–µ—Ç –¥–∞–Ω–Ω—ã–π –∑–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞.", update.message().chat().firstName())
//                );
//                logger.info("Start button has been activated ^)");
//                telegramBot.execute(message);
        long id = update.message().chat().id();
//        —Ç—É—Ç –º—ã –ø—Ä–∏–∫—Ä—É—á–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ –≤ –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é
        InlineKeyboardButton[] buttonsRow = {
                new InlineKeyboardButton(GOROSKOP_CLASSIC_BUTTON).callbackData(GOROSKOP_CLASSIC_BUTTON)};
        InlineKeyboardButton[] buttonsRow2 = {
                new InlineKeyboardButton(GOROSKOP_CHINA_BUTTON).callbackData(GOROSKOP_CHINA_BUTTON)};
        InlineKeyboardMarkup inlineKeyboard = new InlineKeyboardMarkup(buttonsRow, buttonsRow2);
        SendMessage sendMessage = new SendMessage(id, msg);
        sendMessage.replyMarkup(inlineKeyboard);
        telegramBot.execute(sendMessage);
    }


    private void processCallbackQuery(Update update) {
        Long chatId = update.callbackQuery().message().chat().id();
//
        if (GOROSKOP_CLASSIC_BUTTON.equalsIgnoreCase(update.callbackQuery().data())) {
            createButtonClassicZodiacShelter(chatId);
        } else if (GOROSKOP_CHINA_BUTTON.equalsIgnoreCase(update.callbackQuery().data())) {
            createButtonChinaZodiacShelter(chatId);
        } else if (CALLBACK_SHOW_DESCRIPTION_CLASSIC.equalsIgnoreCase(update.callbackQuery().data())) {
            sendShelterDescription(chatId, ShelterGoroskop.CLASSIC);
        } else if (CALLBACK_SHOW_DESCRIPTION_CHINA.equalsIgnoreCase(update.callbackQuery().data())) {
            sendShelterDescription(chatId, ShelterGoroskop.CHINA);
        } else if (CALLBACK_SHOW_INFO_CLASSIC.equalsIgnoreCase(update.callbackQuery().data())) {
            sendShelterInstruction(chatId, ShelterGoroskop.CLASSIC);
        } else if (CALLBACK_SHOW_INFO_CHINA.equalsIgnoreCase(update.callbackQuery().data())) {
            sendShelterInstruction(chatId, ShelterGoroskop.CHINA);
//        } else if (CALLBACK_SHOW_INFO_CATS.equalsIgnoreCase(update.callbackQuery().data())) {
//            sendShelterInfo(chatId, ShelterType.CAT);
//        } else if (CALLBACK_SHOW_MENU_REPORT.equalsIgnoreCase(update.callbackQuery().data())) {
//            createButtonsReportMenu(chatId);
//        } else if (CALLBACK_CHOOSE_SEND_REPORT.equalsIgnoreCase(update.callbackQuery().data())) {
//            sendReportMessage(chatId);
//        } else if (CALLBACK_CHOOSE_FORM_REPORT.equalsIgnoreCase(update.callbackQuery().data())) {
//            sendReportForm(chatId);
        }
    }

    //–¥–æ—Ä–∞–±–æ—Ç–∞—Ç—å –±–∞—Ç—Ç–æ–Ω –∏–Ω—Ñ–æ
    private void createButtonInfoMenu(Long chatId, String dataUser, String dataGoroscop) {
        String msg = "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:";
        InlineKeyboardButton[] buttonsRowForDataUser = {
                new InlineKeyboardButton("–í–≤–æ–¥–∏–º —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ - –ø–æ –¥–∞—Ç–µ ‚å® ").callbackData(dataUser)};
        InlineKeyboardButton[] buttonsRowForDataGoroscop = {
                new InlineKeyboardButton(" \uD83D\uDEC8 –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≥–æ—Ä–æ—Å–∫–æ–ø–µ \uD83E\uDDD0").callbackData(dataGoroscop)};

        InlineKeyboardMarkup inlineKeyboard = new InlineKeyboardMarkup(buttonsRowForDataUser, buttonsRowForDataGoroscop);
        SendMessage sendMessage = new SendMessage(chatId, msg);
        sendMessage.replyMarkup(inlineKeyboard);
        telegramBot.execute(sendMessage);

    }

    private void createButtonClassicZodiacShelter(Long chatId) {
        createButtonInfoMenu(chatId, CALLBACK_SHOW_INFO_CLASSIC, CALLBACK_SHOW_DESCRIPTION_CLASSIC);
    }

    private void createButtonChinaZodiacShelter(Long chatId) {
        createButtonInfoMenu(chatId, CALLBACK_SHOW_INFO_CHINA, CALLBACK_SHOW_DESCRIPTION_CHINA);
//    }
    }

    private void sendShelterDescription(Long chatId, ShelterGoroskop type) {
        SendMessage sendMessage = new SendMessage(chatId, shelterService.getDescription(type));
        telegramBot.execute(sendMessage);
    }

    private void sendShelterInstruction(Long chatId, ShelterGoroskop type) {
        SendMessage sendMessage = new SendMessage(chatId, shelterService.getInstruction(type));
        telegramBot.execute(sendMessage);
    }

    private void failedMessage(Long chatId) {
        String msg = "–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –Ω–µ –ø–æ–Ω–∏–º–∞—é —á—Ç–æ –¥–µ–ª–∞—Ç—å";
        SendMessage sendMessage = new SendMessage(chatId, msg);
        telegramBot.execute(sendMessage);
    }

    private boolean checkMessagePattern(String text) {
        Matcher matcher = PATTERN.matcher(text);
        return matcher.matches();
    }

    private String calculateChineseHoroscope(int day, int month, int year) {
        if (year < 1924) {
            System.out.println("–ì–æ–¥ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–µ –º–µ–Ω—å—à–µ 1924");
            return "–ì–æ–¥ –Ω–µ –º–µ–Ω—å—à–µ 1924";
        } else if (day > 31) {
            return "–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –¥–µ–Ω—å";
        } else if (month > 12) {
            return "–≤—ã –≤–≤–µ–ª–∏ –Ω–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –º–µ—Å—è—Ü";
        }

        // –ó–Ω–∞–∫–∏ –∫–∏—Ç–∞–π—Å–∫–æ–≥–æ –∑–æ–¥–∏–∞–∫–∞
        String[] chineseZodiacSigns = {
                miceChina(), moolChina(), tigerChina(), rabbitChina(), dragonChina(), snakeChina(),
                horseChina(), sheepChina(), monkeyChina(), chikenChina(), dogChina(), pigChina()
        };


        // –ì–æ–¥ –Ω–∞—á–∞–ª–∞ –∫–∏—Ç–∞–π—Å–∫–æ–≥–æ –∫–∞–ª–µ–Ω–¥–∞—Ä—è (–∫–∏—Ç–∞–π—Å–∫–∏–π –≥–æ–¥ 1)
        int startYear = 1924;
//        if (startYear < 1924) {
//            System.out.println("–ì–æ–¥ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–µ –º–µ–Ω—å—à–µ 1924");
//            return "–ì–æ–¥ –Ω–µ –º–µ–Ω—å—à–µ 1924";
//        }

        // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –∫–∏—Ç–∞–π—Å–∫–∏–π –≥–æ–¥ –Ω–∞ –æ—Å–Ω–æ–≤–µ –≥–æ–¥–∞ —Ä–æ–∂–¥–µ–Ω–∏—è
        int chineseYear = (year - startYear) % 60;

        // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –∫–∏—Ç–∞–π—Å–∫–∏–π –º–µ—Å—è—Ü (–ø—Ä–æ—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º –º–µ—Å—è—Ü –∏–∑ –¥–∞—Ç—ã)
        int chineseMonth = month;
//        if (chineseMonth > 12 && chineseMonth <= 0) {
//            return "–≤—ã –≤–≤–µ–ª–∏ –Ω–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –º–µ—Å—è—Ü";
//        }

        // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –∫–∏—Ç–∞–π—Å–∫–∏–π –¥–µ–Ω—å (–ø—Ä–æ—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ–Ω—å –∏–∑ –¥–∞—Ç—ã)
        int chineseDay = day;
//        if (chineseDay <= 0 && chineseDay > 31) {
//            System.out.println("–∏–Ω–∫–æ—Ä–µ—Ä–∫—Ç –¥–µ–π");
//            return "–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –¥–µ–Ω—å";
//        }

        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∑–Ω–∞–∫ –∫–∏—Ç–∞–π—Å–∫–æ–≥–æ –∑–æ–¥–∏–∞–∫–∞
        String zodiacSign = chineseZodiacSigns[chineseYear % 12];
//        String dayOfChina = String.valueOf(chineseDay);
             return " –í–∞—à –≥–æ–¥: " + zodiacSign;


    }
    private String miceChina() {
        return "–ö—Ä—ã—Å–∞. \n" +
                "–ì–æ–¥ –ö—Ä—ã—Å—ã ‚Äî –ø–µ—Ä–≤—ã–π –≤ –ª—É–Ω–Ω–æ–º —Ü–∏–∫–ª–µ –í–æ—Å—Ç–æ—á–Ω–æ–≥–æ –≥–æ—Ä–æ—Å–∫–æ–ø–∞, –ø–æ—Å–ª–µ –Ω–µ–≥–æ –∏–¥—É—Ç –µ—â—ë 11 –ø–µ—Ä–∏–æ–¥–æ–≤, –∫–∞–∂–¥—ã–π –∏–∑ –∫–æ—Ç–æ—Ä—ã—Ö –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ø–æ–¥ –ø–æ–∫—Ä–æ–≤–∏—Ç–µ–ª—å—Å—Ç–≤–æ–º —Å–≤–æ–µ–≥–æ –∑–æ–¥–∏–∞–∫–∞–ª—å–Ω–æ–≥–æ –∂–∏–≤–æ—Ç–Ω–æ–≥–æ. –ü–µ—Ä–≤—ã–π –≥–æ–¥ —Ü–∏–∫–ª–∞ –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç –¥—Ä—É–≥–∏—Ö –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–º–∏ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—è–º–∏. –¢–∞–∫ –∏ –ª—é–¥–∏, —Ä–æ–∂–¥—ë–Ω–Ω—ã–µ –≤ –ø–µ—Ä–∏–æ–¥ –ö—Ä—ã—Å—ã, –æ—Ç–ª–∏—á–∞—é—Ç—Å—è –æ—Ç –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª–µ–π –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –∑–Ω–∞–∫–æ–≤ –∫–∏—Ç–∞–π—Å–∫–æ–≥–æ –≥–æ—Ä–æ—Å–∫–æ–ø–∞. \n" +
                "–ö—Ä—ã—Å–∞ –≤ –≤–æ—Å—Ç–æ—á–Ω–æ–π —Ñ–∏–ª–æ—Å–æ—Ñ–∏–∏ ‚Äî –∑–Ω–∞–∫, —Å–∏–º–≤–æ–ª–∏–∑–∏—Ä—É—é—â–∏–π –ø—Ä–∏—Ä–æ–¥–Ω—É—é —Ö–∏—Ç—Ä–æ—Å—Ç—å, —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø—Ä–∏—Å–ø–æ—Å–∞–±–ª–∏–≤–∞—Ç—å—Å—è –∫ –≤–Ω–µ—à–Ω–∏–º, –ø–æ—Ä–æ–π –æ—á–µ–Ω—å —Å–ª–æ–∂–Ω—ã–º —É—Å–ª–æ–≤–∏—è–º. –≠—Ç–æ—Ç –≥—Ä—ã–∑—É–Ω –æ–±–ª–∞–¥–∞–µ—Ç –Ω–µ–æ—Ä–¥–∏–Ω–∞—Ä–Ω—ã–º–∏ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—è–º–∏ –∏ –º–æ–∂–µ—Ç –¥–æ–±–∏—Ç—å—Å—è —É—Å–ø–µ—Ö–∞ –≤–æ –º–Ω–æ–≥–∏—Ö –æ–±–ª–∞—Å—Ç—è—Ö, –Ω–µ –≤–∏—Ç–∞–µ—Ç –≤ –æ–±–ª–∞–∫–∞—Ö, —Ä–µ–∞–ª—å–Ω–æ —Å–º–æ—Ç—Ä–∏—Ç –Ω–∞ –∂–∏–∑–Ω—å, —á—Ç–æ –ø–æ–º–æ–≥–∞–µ—Ç –º–µ–Ω—å—à–µ —Ä–∞–∑–æ—á–∞—Ä–æ–≤—ã–≤–∞—Ç—å—Å—è –∏–ª–∏ –ø–æ—á—Ç–∏ –Ω–µ —Ä–∞–∑–æ—á–∞—Ä–æ–≤—ã–≤–∞—Ç—å—Å—è –≤ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏.";
    }private String moolChina() {
        return "–ë—ã–∫. \n" +
                "–õ—é–¥–∏, –ø–æ—è–≤–∏–≤—à–∏–µ—Å—è –Ω–∞ —Å–≤–µ—Ç –≤ –≥–æ–¥ –ë—ã–∫–∞, –ø—Ä–∏–∑–µ–º–ª–µ–Ω–Ω—ã–µ –∏ —É–ø–æ—Ä–Ω—ã–µ, —Å–ø–æ—Å–æ–±–Ω—ã–µ –∏ –≥–æ—Ç–æ–≤—ã–µ –º–Ω–æ–≥–æ —Ä–∞–±–æ—Ç–∞—Ç—å, —á—Ç–æ–±—ã –¥–æ–±–∏–≤–∞—Ç—å—Å—è –ø–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã—Ö —Ü–µ–ª–µ–π.\n" +
                "–í–æ –≤—Å–µ—Ö –∫—É–ª—å—Ç—É—Ä–∞—Ö –±—ã–∫ ‚Äî —Å–∏–º–≤–æ–ª —É–ø–æ—Ä–Ω–æ–≥–æ –∏ –ø–æ—Ä–æ–π –æ—á–µ–Ω—å —Ç—è–∂–µ–ª–æ–≥–æ —Ç—Ä—É–¥–∞. –í–æ—Å—Ç–æ—á–Ω–∞—è —Ñ–∏–ª–æ—Å–æ—Ñ–∏—è –Ω–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ: –≥–ª–∞–≤–Ω–æ–π —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–æ–π —Ä–æ–¥–∏–≤—à–∏—Ö—Å—è –≤ –≥–æ–¥ –ë—ã–∫–∞ –Ω–∞–∑—ã–≤–∞—é—Ç —Ç—Ä—É–¥–æ–ª—é–±–∏–µ, —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –º–Ω–æ–≥–æ –∏ –Ω–µ–ª–µ–≥–∫–æ —Ä–∞–±–æ—Ç–∞—Ç—å. –ß—Ç–æ –µ—â–µ —Å–∏–º–≤–æ–ª–∏–∑–∏—Ä—É–µ—Ç —ç—Ç–æ –∫–æ–ø—ã—Ç–Ω–æ–µ –∂–∏–≤–æ—Ç–Ω–æ–µ –≤ –∫–∏—Ç–∞–π—Å–∫–æ–π –∞—Å—Ç—Ä–æ–ª–æ–≥–∏–∏? –ß–µ–º –æ—Ç–ª–∏—á–∞—é—Ç—Å—è –æ—Ç –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –ª—é–¥–∏, –∂–∏–≤—É—â–∏–µ –ø–æ–¥ –µ–≥–æ –ø–æ–∫—Ä–æ–≤–∏—Ç–µ–ª—å—Å—Ç–≤–æ–º, —Å –∫–µ–º –æ–Ω–∏ —Ö–æ—Ä–æ—à–æ –ª–∞–¥—è—Ç, –∞ —Å –∫–µ–º –æ—Ç–Ω–æ—à–µ–Ω–∏–π –ª—É—á—à–µ –∏–∑–±–µ–≥–∞—Ç—å. –ò –∫–∞–∫–∏–µ –≤–∞–∂–Ω—ã–µ –≤ –º–∏—Ä–æ–≤–æ–º –º–∞—Å—à—Ç–∞–±–µ —Å–æ–±—ã—Ç–∏—è –ø—Ä–æ–∏—Å—Ö–æ–¥–∏–ª–∏ –≤ –≥–æ–¥ –ë—ã–∫–∞ ‚Äî –≤—Å–µ —ç—Ç–æ –∏ –Ω–µ —Ç–æ–ª—å–∫–æ –ø–æ–¥—Ä–æ–±–Ω–æ —Ä–∞–∑–±–∏—Ä–∞–µ–º –≤ —Å—Ç–∞—Ç—å–µ.>";
    }private String tigerChina() {
        return "–¢–∏–≥—Ä. \n" +
                "–û–ø–∞—Å–Ω—ã–π —Ö–∏—â–Ω–∏–∫, –∫–æ—Ç–æ—Ä—ã–π –≤ –≤–æ—Å—Ç–æ—á–Ω–æ–π —Ñ–∏–ª–æ—Å–æ—Ñ–∏–∏ —è–≤–ª—è–µ—Ç—Å—è —Å–∏–º–≤–æ–ª–æ–º –º–æ–≥—É—â–µ—Å—Ç–≤–∞ –∏ –ø—Ä–æ—Ü–≤–µ—Ç–∞–Ω–∏—è, –±–ª–∞–≥–æ–≤–æ–ª–∏—Ç –ø–µ—Ä–µ–º–µ–Ω–∞–º.\n" +
                "–¢–∏–≥—Ä —Å—Ç–æ–∏—Ç —Ç—Ä–µ—Ç—å–∏–º –≤ –∑–æ–¥–∏–∞–∫–∞–ª—å–Ω–æ–º —Ü–∏–∫–ª–µ –∏–∑ 12-—Ç–∏ –ø–æ—á–∏—Ç–∞–µ–º—ã—Ö –∂–∏–≤–æ—Ç–Ω—ã—Ö. –û–Ω –∑–∞–≤–æ–µ–≤–∞–ª —ç—Ç–æ –º–µ—Å—Ç–æ –≤ –≥–æ–Ω–∫–µ, —É—Å—Ç—É–ø–∏–≤ —Ç–æ–ª—å–∫–æ —Ö–∏—Ç—Ä–æ–π –ö—Ä—ã—Å–µ –∏ –ë—ã–∫—É. –ì–æ–¥ –¢–∏–≥—Ä–∞ –æ–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è –∫–∞–∫ –≤—Ä–µ–º—è –ø–µ—Ä–µ–º–µ–Ω –∏ –¥–≤–∏–∂–µ–Ω–∏—è –≤–ø–µ—Ä–µ–¥.\n" +
                "–°–º–µ–ª–æ—Å—Ç—å, —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –≤ —Å–µ–±–µ, –Ω–µ–ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º–æ—Å—Ç—å ‚Äî —á–µ—Ä—Ç—ã, –∫–æ—Ç–æ—Ä—ã–º–∏ –Ω–∞–¥–µ–ª—è–µ—Ç –¢–∏–≥—Ä —Ä–æ–∂–¥–µ–Ω–Ω—ã—Ö –≤ –µ–≥–æ –≥–æ–¥. –¢–∞–∫–∏–µ –ª—é–¥–∏ —Ä–µ—à–∏—Ç–µ–ª—å–Ω—ã, —Å–≤–æ–µ–≤–æ–ª—å–Ω—ã, –Ω–µ –±–æ—è—Ç—Å—è —Ä–∏—Å–∫–æ–≤–∞—Ç—å –∏ —Å—Ç—Ä–µ–º—è—Ç—Å—è –∫ –ø–æ–±–µ–¥–µ.";
    }private String rabbitChina() {
        return "–ö—Ä–æ–ª–∏–∫. \n" +
                "–≠—Ç–æ—Ç –≥–æ–¥ –Ω–µ—Å–µ—Ç –≤ —Å–µ–±–µ —É—é—Ç, –¥–∏–ø–ª–æ–º–∞—Ç–∏—é, –≥–æ—Å—Ç–µ–ø—Ä–∏–∏–º—Å—Ç–≤–æ –∏ —Ç–µ–ø–ª–æ—Ç—É. –ü–æ–∑–∏—Ç–∏–≤–Ω—ã–µ –∫–∞—á–µ—Å—Ç–≤–∞: —É–º–Ω—ã–π, –Ω–∞–±–ª—é–¥–∞—Ç–µ–ª—å–Ω—ã–π, —Ä–∞–∑–≤–∏—Ç–æ–π, –º–∏—Ä–æ–ª—é–±–∏–≤—ã–π, –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π, —Ä–æ–º–∞–Ω—Ç–∏—á–Ω—ã–π –∏ –æ—á–µ–Ω—å –ø—Ä–µ–¥–∞–Ω —Ç–µ–º, –∫–æ–≥–æ –ª—é–±–∏—Ç. –ù–µ–≥–∞—Ç–∏–≤–Ω—ã–µ –∫–∞—á–µ—Å—Ç–≤–∞: –±–µ—Å–ø–æ–∫–æ–µ–Ω, –±–æ—è–∑–ª–∏–≤, –ø–µ–¥–∞–Ω—Ç–∏—á–µ–Ω –∏ —Å–ª–∏—à–∫–æ–º –∑–∞–Ω—è—Ç —Å–æ–±–æ–π.\n" +
                "–ö—Ä–æ–ª–∏–∫ - —Ö–æ—Ä–æ—à–∏–π –¥—Ä—É–≥ –∏ —á—É–≤—Å—Ç–≤–µ–Ω–Ω—ã–π –ª—é–±–æ–≤–Ω–∏–∫, –æ–±–ª–∞–¥–∞–µ—Ç —Ö–æ—Ä–æ—à–∏–º–∏ –º–∞–Ω–µ—Ä–∞–º–∏, –ª—é–±–∏—Ç –æ–±—â–∞—Ç—å—Å—è, —É–º–µ–µ—Ç —Å–æ–∑–¥–∞—Ç—å —Ç–æ–Ω–∫—É—é —Å–≤—è–∑—å —Å –¥—Ä—É–≥–∏–º —á–µ–ª–æ–≤–µ–∫–æ–º. –í–Ω–µ—à–Ω–µ –æ–Ω –≤—Å–µ–≥–¥–∞ —ç–ª–µ–≥–∞–Ω—Ç–µ–Ω, –ª—é–±–µ–∑–µ–Ω –≤ –æ–±—â–µ–Ω–∏–∏, –ø–æ–º–æ–≥–∞–µ—Ç –ø–æ–ø–∞–≤—à–∏–º –≤ –±–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ –ª—é–¥—è–º. –£–¥–∞—á–ª–∏–≤—ã–π –∏ –ø–æ–∑–∏—Ç–∏–≤–Ω—ã–π –∑–Ω–∞–∫.";
    }private String dragonChina() {
        return "–î—Ä–∞–∫–æ–Ω. \n" +
                "–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞ –≥–æ–¥–∞ –î—Ä–∞–∫–æ–Ω–∞ –±—É–¥–µ—Ç –Ω–µ–ø–æ–ª–Ω–æ–π –±–µ–∑ –Ω–µ–±–æ–ª—å—à–∏—Ö —É—Ç–æ—á–Ω–µ–Ω–∏–π. –ö–∏—Ç–∞–π—Å–∫–∞—è –∞—Å—Ç—Ä–æ–ª–æ–≥–∏—è –±–µ—Ä–µ—Ç –∑–∞ –æ—Å–Ω–æ–≤—É –ø—è—Ç—å —ç–ª–µ–º–µ–Ω—Ç–æ–≤: –æ–≥–æ–Ω—å, –¥–µ—Ä–µ–≤–æ, –≤–æ–¥—É, –∑–µ–º–ª—é –∏ –º–µ—Ç–∞–ª–ª. –ò–Ω–∞—á–µ –∏—Ö –µ—â–µ –Ω–∞–∑—ã–≤–∞—é—Ç —Å—Ç–∏—Ö–∏—è–º–∏. –ö–∞–∂–¥–∞—è –∏–∑ –Ω–∏—Ö –æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–≤–æ–µ –≤–ª–∏—è–Ω–∏–µ –Ω–∞ –≥–æ–¥ –∏, –∫–∞–∫ —Å–ª–µ–¥—Å—Ç–≤–∏–µ, –Ω–∞ –∂–∏–≤–æ—Ç–Ω–æ–µ –∫–∏—Ç–∞–π—Å–∫–æ–≥–æ –≥–æ—Ä–æ—Å–∫–æ–ø–∞. –î–∞–≤–∞–π—Ç–µ –ø–æ–¥—Ä–æ–±–Ω–µ–µ —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏.\n" +
                "–ú—É–∂—á–∏–Ω—ã-–î—Ä–∞–∫–æ–Ω—ã –æ—á–µ–Ω—å –∑–∞–±–æ—Ç—è—Ç—Å—è –æ –±–ª–∏–∂–Ω–∏—Ö, –Ω–æ —Å–∞–º–∏ –æ–Ω–∏ –¥–æ–≤–æ–ª—å–Ω–æ —ç–≥–æ–∏—Å—Ç–∏—á–Ω—ã. –ó–∞—Ç–æ —Ö–∞—Ä–∏–∑–º–∞—Ç–∏—á–Ω—ã, –∑–∞ —á—Ç–æ –∏–º –º–Ω–æ–≥–æ–µ –ø—Ä–æ—â–∞–µ—Ç—Å—è. –ò–º–µ—é—Ç —Ç–æ–ª–ø—ã –≤–æ–∑–¥—ã—Ö–∞—Ç–µ–ª—å–Ω–∏—Ü. –ê —Ç–∞–∫–∂–µ –º–Ω–æ–∂–µ—Å—Ç–≤–æ –ø–ª–∞–Ω–æ–≤: –Ω–∞—Å—Ç–æ–ª—å–∫–æ, —á—Ç–æ –Ω–µ—Ä–µ–¥–∫–æ —Ä–∞—Å–ø—ã–ª—è—é—Ç—Å—è –∏ –Ω–µ –¥–æ–≤–æ–¥—è—Ç –Ω–∞—á–∞—Ç–æ–µ –¥–æ –∫–æ–Ω—Ü–∞. –ú—É–∂—á–∏–Ω—ã-–î—Ä–∞–∫–æ–Ω—ã –º–æ–≥—É—Ç —Å—Ç–∞–≤–∏—Ç—å –¥–∞–ª–µ–∫–∏–µ –æ—Ç —Ä–µ–∞–ª—å–Ω–æ–π –∂–∏–∑–Ω–∏ —Ü–µ–ª–∏ –∏ —É–ø–æ—Ä–Ω–æ –∏—Ö –¥–æ–±–∏–≤–∞—Ç—å—Å—è. –ß—Ç–æ –Ω–µ –≤—Å–µ–≥–¥–∞ —Ö–æ—Ä–æ—à–æ —Å–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –Ω–∞ —Å–µ–º–µ–π–Ω–æ–π –∂–∏–∑–Ω–∏.\n" +
                "–ñ–µ–Ω—â–∏–Ω—ã-–î—Ä–∞–∫–æ–Ω—ã —Ü–µ–Ω—è—Ç —Å–µ–±—è. –û–Ω–∏ —Å–ª–µ–≥–∫–∞ –≤—ã—Å–æ–∫–æ–º–µ—Ä–Ω—ã, –ª—é–±—è—Ç –≤–Ω–∏–º–∞–Ω–∏–µ –∏ —á–∞—Å—Ç–æ –æ–∫–∞–∑—ã–≤–∞—é—Ç—Å—è –≤ —Å–∞–º–æ–º –µ–≥–æ —Ü–µ–Ω—Ç—Ä–µ. –û–±–ª–∞–¥–∞—é—Ç –æ—Ç–ª–∏—á–Ω—ã–º –≤–∫—É—Å–æ–º. –î—Ä–∞–∫–æ–Ω—ã –±–µ—Ä–µ–∂–Ω–æ –∑–∞–±–æ—Ç—è—Ç—Å—è –æ —Å–µ–±–µ –∏ —Å–ª–µ–¥—è—Ç –∑–∞ —Å–≤–æ–µ–π –≤–Ω–µ—à–Ω–µ–π –∫—Ä–∞—Å–æ—Ç–æ–π, –≤ –∫–æ—Ç–æ—Ä–æ–π –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–µ –æ–±–∞—è–Ω–∏–µ. –†–∞–∑—É–º–µ–µ—Ç—Å—è, —ç—Ç–æ –¥–µ–ª–∞–µ—Ç –∂–µ–Ω—â–∏–Ω-–î—Ä–∞–∫–æ–Ω–æ–≤ –æ—á–µ–Ω—å –ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–º–∏ –¥–ª—è –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–ª–æ–∂–Ω–æ–≥–æ –ø–æ–ª–∞.";
    }private String snakeChina() {
        return "–ó–º–µ—è.\n" +
                "–ó–º–µ–∏, –∫–∞–∫–∏–µ –æ–Ω–∏? –ú—É–¥—Ä—ã–µ, —Å–ø–æ–∫–æ–π–Ω—ã–µ, –≤–µ–ª–∏—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ, —Å–ø—Ä–∞–≤–µ–¥–ª–∏–≤—ã–µ. –ù–æ —É–∂ —Ç–æ—á–Ω–æ –ª—É—á—à–µ –Ω–µ –Ω–∞—Å—Ç—É–ø–∞—Ç—å –∏–º –Ω–∞ —Ö–≤–æ—Å—Ç! \n" +
                "–ú—ã—Å–ª–∏—Ç–µ–ª–∏ –∏ —Å–æ–±–∏—Ä–∞—Ç–µ–ª–∏ —Ç–∞–π–Ω ‚Äî –≤–æ—Ç –æ–Ω–∏, –ª—é–¥–∏, —Ä–æ–∂–¥–µ–Ω–Ω—ã–µ –≤ –≥–æ–¥ –ó–º–µ–∏. –ú—É–¥—Ä—ã–µ –∏ —Ö–ª–∞–¥–Ω–æ–∫—Ä–æ–≤–Ω—ã–µ, –æ–Ω–∏ –ª–µ–≥–∫–æ –º–æ–≥—É—Ç —Ä–∞–∑–º–æ—Ç–∞—Ç—å –∫–ª—É–±–æ–∫ —Å–∞–º—ã—Ö –∑–∞–ø—É—Ç–∞–Ω–Ω—ã—Ö –∏–Ω—Ç—Ä–∏–≥. –°—Ä–µ–¥–∏ —ç—Ç–∏—Ö –ª—é–¥–µ–π –Ω–µ—Ä–µ–¥–∫–æ –≤—Å—Ç—Ä–µ—á–∞—é—Ç—Å—è –ø–æ–ª–∏—Ç–∏–∫–∏, —Ñ–∏–Ω–∞–Ω—Å–∏—Å—Ç—ã, —ç–∑–æ—Ç–µ—Ä–∏–∫–∏, –ø—Å–∏—Ö–æ–ª–æ–≥–∏. –ó–º–µ–∏ –≥–∏–±–∫–∏–µ –≤ –æ–±—â–µ–Ω–∏–∏ –∏ –≤—Å–µ–≥–¥–∞ —É–≤–µ—Ä–µ–Ω–Ω–æ –∏–¥—É—Ç –∫ —Å–≤–æ–µ–π —Ü–µ–ª–∏.";
    }private String horseChina() {
        return "–õ–æ—à–∞–¥—å.\n" +
                " –õ—é–¥–∏, —Ä–æ–∂–¥—ë–Ω–Ω—ã–µ –≤ –≥–æ–¥ –õ–æ—à–∞–¥–∏ ‚Äì –∞–∫—Ç–∏–≤–∏—Å—Ç—ã –∏ –∞–≤–∞–Ω—Ç—é—Ä–∏—Å—Ç—ã." +
                " –û–Ω–∏ –∏–º–µ—é—Ç —à–∏—Ä–æ–∫–∏–π –∫—Ä—É–≥ –æ–±—â–µ–Ω–∏—è –∏ –≤—Å–µ–≥–¥–∞ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ —Ü–µ–Ω—Ç—Ä–µ –≤–Ω–∏–º–∞–Ω–∏—è." +
                " –ë–ª–∞–≥–æ–¥–∞—Ä—è –≤—Ä–æ–∂–¥—ë–Ω–Ω–æ–º—É —Ç—Ä—É–¥–æ–ª—é–±–∏—é –ª–µ–≥–∫–æ –∑–∞–Ω–∏–º–∞—é—Ç –ª–∏–¥–µ—Ä—Å–∫–∏–µ –ø–æ–∑–∏—Ü–∏–∏ –∏ —Ä—É–∫–æ–≤–æ–¥—è—â–∏–µ –¥–æ–ª–∂–Ω–æ—Å—Ç–∏." +
                " –†–∞—Å—Å–∫–∞–∂–µ–º –ø–æ–¥—Ä–æ–±–Ω–µ–µ –æ–± —ç—Ç–æ–º –∑–Ω–∞–∫–µ –∫–∏—Ç–∞–π—Å–∫–æ–≥–æ –∑–æ–¥–∏–∞–∫–∞.\n" +
                "–ó–Ω–∞–∫ –õ–æ—à–∞–¥–∏ –≤ –∫–∏—Ç–∞–π—Å–∫–æ–º –≥–æ—Ä–æ—Å–∫–æ–ø–µ ‚Äî —Å–∏–º–≤–æ–ª –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –∏ –¥–≤–∏–∂–µ–Ω–∏—è. –ü—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—è–º —ç—Ç–æ–≥–æ –∑–Ω–∞–∫–∞ –∫–æ–º—Ñ–æ—Ä—Ç–Ω–µ–µ —Ä–∞–±–æ—Ç–∞—Ç—å –≤ –æ–¥–∏–Ω–æ—á–∫—É, –Ω–µ–∂–µ–ª–∏ –≤ –≥—Ä—É–ø–ø–µ. –ò –∏—Å—Ö–æ–¥—è –∏–∑ —Å—Ç—Ä–µ–º–ª–µ–Ω–∏—è –∫ —Å–≤–æ–±–æ–¥–µ, –ø–æ—è–≤–ª—è–µ—Ç—Å—è –æ–≥—Ä–æ–º–Ω–∞—è —Ç—è–≥–∞ –∫ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è–º. \n" +
                "\n" +
                "–ì–æ–≤–æ—Ä—è –æ –õ–æ—à–∞–¥–∏, –∫–∞–∫ –æ –ª—é–±–æ–≤–Ω–æ–º –ø–∞—Ä—Ç–Ω—ë—Ä–µ, —Å–ª–µ–¥—É–µ—Ç –æ—Ç–º–µ—Ç–∏—Ç—å —Ç–∞–∫–∏–µ –∫–∞—á–µ—Å—Ç–≤–∞, –∫–∞–∫ –≤–µ—Ä–Ω–æ—Å—Ç—å –∏ –∑–∞–±–æ—Ç—É. –ü–æ—ç—Ç–æ–º—É, –Ω–∞—Ö–æ–¥—è—Å—å –≤ –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö —Å –Ω–∏–º–∏, –º–æ–∂–Ω–æ –±—ã—Ç—å —É–≤–µ—Ä–µ–Ω–Ω—ã–º –≤ –∑–∞–≤—Ç—Ä–∞—à–Ω–µ–º –¥–Ω–µ."
                ;
    }private String sheepChina() {

        return "–ö–æ–∑–∞. \n" +
                "–õ—é–¥–∏, —Ä–æ–∂–¥—ë–Ω–Ω—ã–µ –≤ –≥–æ–¥ –ö–æ–∑—ã, –æ—Ç–º–µ–Ω–Ω—ã–µ –∞–∫—Ç—ë—Ä—ã. –û—Ç–ª–∏—á–∏—Ç–µ–ª—å–Ω–æ–π —á–µ—Ä—Ç–æ–π —è–≤–ª—è–µ—Ç—Å—è –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –ø—Ä–∏–π—Ç–∏ –Ω–∞ –ø–æ–º–æ—â—å –≤—Å–µ–º –Ω—É–∂–¥–∞—é—â–∏–º—Å—è." +
                " –ë–ª–∞–≥–æ—Ä–æ–¥–Ω–∞—è –ö–æ–∑–∞ –ø—Ä–µ–∫—Ä–∞—Å–Ω—ã–π —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫, —Ç–∞–∫ –∫–∞–∫ –æ–Ω–∞ –æ—á–µ–Ω—å –Ω–∞—á–∏—Ç–∞–Ω–∞ –∏ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∞.\n" +
                "–ö–æ–∑–∞ ‚Äî —Å–∏–º–≤–æ–ª –≥–∞—Ä–º–æ–Ω–∏–∏ –∏ –º–∏—Ä–æ–ª—é–±–∏—è, –ø–æ—ç—Ç–æ–º—É –ª—é–¥–∏, —Ä–æ–∂–¥—ë–Ω–Ω—ã–µ –≤ –≥–æ–¥ –ö–æ–∑—ã —â–µ–¥—Ä–æ –Ω–∞–¥–µ–ª–µ–Ω—ã —ç—Ç–∏–º–∏ –∫–∞—á–µ—Å—Ç–≤–∞–º–∏. –í —Å–∏–ª—É —Å–≤–æ–µ–π —É—Å—Ç—É–ø—á–∏–≤–æ—Å—Ç–∏, —á–µ–ª–æ–≤–µ–∫-–ö–æ–∑–∞ –Ω–µ —Å—Ç—Ä–µ–º–∏—Ç—Å—è –∫ –æ–±—Ä–µ—Ç–µ–Ω–∏—é –≤–ª–∞—Å—Ç–∏ –∏ –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏—é –ø–æ –∫–∞—Ä—å–µ—Ä–Ω–æ–π –ª–µ—Å—Ç–Ω–∏—Ü–µ.\n" +
                "\n" +
                "–õ—é–±–æ–≤—å –∫ —á–µ–ª–æ–≤–µ–∫—É –≤–æ—Å–ø–æ–ª–Ω—è–µ—Ç –ø—Ä–æ–±–µ–ª –ª—é–±–≤–∏ –∫ —Ä–∞–±–æ—Ç–µ, –ø–æ—ç—Ç–æ–º—É –≤ –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª–∏ —ç—Ç–æ–≥–æ –∑–Ω–∞–∫–∞ –≤–µ—Å—å–º–∞ —á—É–≤—Å—Ç–≤–µ–Ω–Ω—ã –∏ —Ä–æ–º–∞–Ω—Ç–∏—á–Ω—ã.";
    }private String monkeyChina() {
        return " –û–±–µ–∑—å—è–Ω–∞. \n" +
                "–õ—é–¥–∏, —Ä–æ–∂–¥–µ–Ω–Ω—ã–µ –≤ –≥–æ–¥ –û–±–µ–∑—å—è–Ω—ã, –∏–º–µ—é—Ç —ç–∫—Å–ø—Ä–µ—Å—Å–∏–≤–Ω—ã–π —Ö–∞—Ä–∞–∫—Ç–µ—Ä. –í —Å—Ç–∞—Ç—å–µ —Ä–∞—Å—Å–∫–∞–∂–µ–º –æ —Å–∏–ª—å–Ω—ã—Ö –∏ —Å–ª–∞–±—ã—Ö —Å—Ç–æ—Ä–æ–Ω–∞—Ö —ç—Ç–æ–≥–æ –∑–Ω–∞–∫–∞ –∏ –¥—Ä—É–≥–∏—Ö –ø—Ä–∏—Å—É—â–∏—Ö –µ–º—É —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞—Ö\n" +
                "–í –∫–∏—Ç–∞–π—Å–∫–æ–º –≥–æ—Ä–æ—Å–∫–æ–ø–µ –û–±–µ–∑—å—è–Ω–∞ ‚Äî —Ö–∏—Ç—Ä—ã–π –∑–≤–µ—Ä—å, –∫–æ—Ç–æ—Ä—ã–π –≤—Å–µ–≥–¥–∞ –±—Ä–æ—Å–∞–µ—Ç –≤—ã–∑–æ–≤ —Ç–æ–º—É, –∫—Ç–æ —Å–∏–ª—å–Ω–µ–µ, –∏ –Ω–µ –±–æ–∏—Ç—Å—è –ø—Ä–µ–≥—Ä–∞–¥. –°–ª–µ–¥—É—é—â–∏–π –≥–æ–¥ –û–±–µ–∑—å—è–Ω—ã –±—É–¥–µ—Ç –≤ 2028: –æ–Ω –ø—Ä–æ–π–¥–µ—Ç –ø–æ–¥ –ø–æ–∫—Ä–æ–≤–∏—Ç–µ–ª—å—Å—Ç–≤–æ–º –ó–µ–º–ª—è–Ω–æ–π –û–±–µ–∑—å—è–Ω—ã. –ù–∞ –í–æ—Å—Ç–æ–∫–µ —Å—á–∏—Ç–∞–µ—Ç—Å—è, —á—Ç–æ –≤—Å–µ —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ 5 –≤–µ—â–µ—Å—Ç–≤: –≤–æ–¥—ã, –¥–µ—Ä–µ–≤–∞, –æ–≥–Ω—è, –∑–µ–º–ª–∏ –∏ –º–µ—Ç–∞–ª–ª–∞. –ü–æ—ç—Ç–æ–º—É –∑–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–º—É –≤–µ—â–µ—Å—Ç–≤—É –∏ –Ω–∞–¥–µ–ª—è–µ—Ç—Å—è –µ–≥–æ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞–º–∏. –í–º–µ—Å—Ç–µ —Å –∞—Å—Ç—Ä–æ–ª–æ–≥–æ–º –º—ã –≤—ã—è—Å–Ω–∏–ª–∏, —á–µ–º –æ—Ç–ª–∏—á–∞—é—Ç—Å—è –ª—é–¥–∏, —Ä–æ–∂–¥–µ–Ω–Ω—ã–µ –≤ –≥–æ–¥ –û–±–µ–∑—å—è–Ω—ã, —á—Ç–æ –ø—Ä–∏–Ω–æ—Å–∏—Ç –∏–º —É–¥–∞—á—É –∏ —Å –∫–∞–∫–∏–º–∏ –∑–Ω–∞–∫–∞–º–∏ —É –Ω–∏—Ö –≤—ã—Å–æ–∫–∞—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å.";
    }private String chikenChina() {
        return "–ü–µ—Ç—É—Ö. \n" +
                "–í –ö–∏—Ç–∞–µ –ø–µ—Ç—É—Ö ‚Äî –Ω–∞—Å—Ç–æ—è—â–∏–π –ø—Ä–µ–¥–≤–µ—Å—Ç–Ω–∏–∫ –¥–æ–±—Ä–∞.\n" +
                "–ö–∏—Ç–∞–π—Ü—ã –ø—Ä–∏–≤—ã–∫–ª–∏ —Å—á–∏—Ç–∞—Ç—å, —á—Ç–æ —Å–≤–æ–∏–º –∫—Ä–∏–∫–æ–º –ü–µ—Ç—É—Ö –æ—Ç–≥–æ–Ω—è–µ—Ç –∑–ª—ã—Ö –¥—É—Ö–æ–≤ —Ç–µ–º–Ω–æ—Ç—ã. –û–Ω –æ–ª–∏—Ü–µ—Ç–≤–æ—Ä—è–µ—Ç —Å–æ–±–æ–π —Å–≤–µ—Ç –∏ –Ω–∞–¥–µ–∂–¥—É. –ü—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—å —ç—Ç–æ–≥–æ –∑–Ω–∞–∫–∞ –ö–∏—Ç–∞–π—Å–∫–æ–≥–æ –≥–æ—Ä–æ—Å–∫–æ–ø–∞ –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è —Å–æ–æ–±—Ä–∞–∑–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é, –Ω–∞—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å—é –∏ —Å–µ—Ä–¥–µ—á–Ω—ã–º —Å–∫–ª–∞–¥–æ–º —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∞. –ü–µ—Ç—É—Ö—É –Ω–µ —Å–≤–æ–π—Å—Ç–≤–µ–Ω–Ω–æ –æ—Ç—Å—Ç—É–ø–∞—Ç—å, –µ–º—É –Ω—Ä–∞–≤–∏—Ç—Å—è –±—ã—Ç—å –ø–µ—Ä–≤—ã–º –∏ –Ω–∞–ø—Ä–∞–≤–ª—è—Ç—å –¥—Ä—É–≥–∏—Ö. ";
    }private String dogChina() {
        return "–°–æ–±–∞–∫–∞.\n" +
                "¬´–ò–º–µ—Ç—å –≤ –æ–∫—Ä—É–∂–µ–Ω–∏–∏ –º–Ω–æ–≥–æ –°–æ–±–∞–∫¬ª ‚Äî –±—É–¥–µ—Ç —Ö–æ—Ä–æ—à–∏–º –ø–æ–∂–µ–ª–∞–Ω–∏–µ–º –Ω–∞ –∫–∏—Ç–∞–π—Å–∫–∏–π –ù–æ–≤—ã–π –≥–æ–¥. –í–µ–¥—å —ç—Ç–∏ –ª—é–¥–∏ –æ—Ç–ª–∏—á–∞—é—Ç—Å—è –ø—Ä–µ–¥–∞–Ω–Ω–æ—Å—Ç—å—é, –æ–Ω–∏ –Ω–∞–¥–µ–∂–Ω—ã–µ –¥—Ä—É–∑—å—è.\n" +
                "–° –¥–µ—Ç—Å—Ç–≤–∞ –Ω–∞—Å —É—á–∞—Ç: —Å–æ–±–∞–∫–∞ ‚Äî –¥—Ä—É–≥ —á–µ–ª–æ–≤–µ–∫–∞. –ü—Ä–∏–Ω—è—Ç–æ –≤–æ—Å—Ö–≤–∞–ª—è—Ç—å –∏—Ö –≤–µ—Ä–Ω–æ—Å—Ç—å, –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –∑–∞—â–∏—Ç–∏—Ç—å —Ö–æ–∑—è–∏–Ω–∞ —Ü–µ–Ω–æ–π —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–π –∂–∏–∑–Ω–∏. –ò –∫—Å—Ç–∞—Ç–∏, –∑–∞–º–µ—Ç–∏–ª–∏, —á—Ç–æ –≤ –¥–µ—Ç—Å–∫–∏—Ö –º—É–ª—å—Ç–∏–∫–∞—Ö –∏ –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–µ —ç—Ç–æ –∂–∏–≤–æ—Ç–Ω–æ–µ –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä—É—é—Ç –∫–∞–∫ –∑–ª–æ–¥–µ—è –∏–ª–∏ –ø–æ–¥–ª–µ—Ü–∞?\n" +
                "\n" +
                "–í –∫–∏—Ç–∞–π—Å–∫–æ–º –≥–æ—Ä–æ—Å–∫–æ–ø–µ —ç—Ç–æ–º—É –∑–Ω–∞–∫—É –ø—Ä–∏—Å—É—â–∏ —Ç–µ –∂–µ —á–µ—Ä—Ç—ã, —á—Ç–æ –º—ã –ø—Ä–∏–ø–∏—Å—ã–≤–∞–µ–º –Ω–∞—à–∏–º —á–µ—Ç–≤–µ—Ä–æ–Ω–æ–≥–∏–º –±—Ä–∞—Ç—å—è–º: –¥—Ä—É–∂–µ–ª—é–±–∏–µ, –ø—Ä–µ–¥–∞–Ω–Ω–æ—Å—Ç—å.";
    }private String pigChina() {
        return "–°–≤–∏–Ω—å—è. \n" +
                "–ù–µ—Å–ø—Ä–æ—Å—Ç–∞ —Ç—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω—ã–µ –∫–æ–ø–∏–ª–∫–∏ –¥–µ–ª–∞—é—Ç –≤ –≤–∏–¥–µ —Ö—Ä—é—à–∫–∏: —Å–æ –≤—Ä–µ–º–µ–Ω –î—Ä–µ–≤–Ω–µ–≥–æ –ö–∏—Ç–∞—è —Å–≤–∏–Ω—å—è —Å—á–∏—Ç–∞–µ—Ç—Å—è —Å–∏–º–≤–æ–ª–æ–º –∏–∑–æ–±–∏–ª–∏—è.\n" +
                "–õ—é–¥–µ–π, —Ä–æ–∂–¥–µ–Ω–Ω—ã—Ö –≤ –≥–æ–¥ –ö–∞–±–∞–Ω–∞, –æ–±—ä–µ–¥–∏–Ω—è–µ—Ç —Ç—Ä—É–¥–æ–ª—é–±–∏–µ, –æ–±—â–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∏ —Å—Ç—Ä–µ–º–ª–µ–Ω–∏–µ –∂–∏—Ç—å –Ω–∞ —à–∏—Ä–æ–∫—É—é –Ω–æ–≥—É. –ù–æ –Ω–µ–ª—å–∑—è —Å–∫–∞–∑–∞—Ç—å, —á—Ç–æ —Ç–∞–∫ —É–∂ –æ–¥–∏–Ω–∞–∫–æ–≤—ã –≤—Å–µ –ª—é–¥–∏ —ç—Ç–æ–≥–æ –∑–Ω–∞–∫–∞. –†–∞—Å—Å–∫–∞–∂–µ–º, –∫–∞–∫–∏–µ –ö–∞–±–∞–Ω—ã –±—ã–≤–∞—é—Ç, –∫–∞–∫ –≤–ª–∏—è–µ—Ç –Ω–∞ –∏—Ö —Ö–∞—Ä–∞–∫—Ç–µ—Ä –∏ –ø—Ä–∏–≤—ã—á–∫–∏ —Å—Ç–∏—Ö–∏—è, –ø–æ–¥ —Å–∏–º–≤–æ–ª–æ–º –∫–æ—Ç–æ—Ä–æ–π –æ–Ω–∏ —Ä–æ–¥–∏–ª–∏—Å—å.";
    }


    private String getZodiacSign(int day, int month) {


        if ((month == 3 && day >= 21 && day <= 31) || (month == 4 && day <= 19)) {
            return oven();
        } else if ((month == 4 && day >= 20 && day <= 30) || (month == 5 && day <= 20)) {
            return " –¢–µ–ª—å—Ü—ã ‚Äî –ª–∏—á–Ω–æ—Å—Ç–∏ –æ—á–µ–Ω—å —Å–∏–ª—å–Ω—ã–µ –∏ –æ–± —ç—Ç–æ–º —É–∂–µ –±—ã–ª–æ —Å–∫–∞–∑–∞–Ω–æ –≤—ã—à–µ." +
                    " –ù–æ –∫–æ–≥–¥–∞ –∏—Ö –ª–∏—á–Ω—ã–µ –∫–∞—á–µ—Å—Ç–≤–∞ —Å—Ç–∞–Ω–æ–≤—è—Ç—Å—è –≥–∏–ø–µ—Ä—Ç—Ä–æ—Ñ–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –∏ –≤—ã—Ö–æ–¥—è—Ç –∑–∞ —Ä–∞–º–∫–∏, —Å –Ω–∏–º–∏ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –æ—á–µ–Ω—å —Ç—è–∂–µ–ª–æ. –û–Ω–∏ —É–ø–æ—Ä–Ω—ã –∏ —Ç—Ä—É–¥–æ–ª—é–±–∏–≤—ã, –≥–æ—Ç–æ–≤—ã –≥–æ–¥–∞–º–∏ –º–Ω–æ–≥–æ —Ç—Ä—É–¥–∏—Ç—å—Å—è, —á—Ç–æ–±—ã –¥–æ–±–∏—Ç—å—Å—è –∂–µ–ª–∞–µ–º–æ–≥–æ. –ù–æ –±—ã–≤–∞–µ—Ç, —á—Ç–æ —ç—Ç–∏ –ø—Ä–µ–∫—Ä–∞—Å–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞ –Ω–∞—Ç—É—Ä—ã –ø—Ä–∏ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã—Ö –æ–±—Å—Ç–æ—è—Ç–µ–ª—å—Å—Ç–≤–∞—Ö —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∏—Ä—É—é—Ç—Å—è –≤ –Ω–µ–¥–æ—Å—Ç–∞—Ç–∫–∏. –ò —Ç–æ–≥–¥–∞ —á–µ–ª–æ–≤–µ–∫ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –∏–∑–ª–∏—à–Ω–µ —É–ø—Ä—è–º—ã–º, —Å—Ç–∞—Ä–∞–µ—Ç—Å—è –¥–æ–±–∏—Ç—å—Å—è —Ç–æ–≥–æ, —á—Ç–æ –Ω–∞ —Å–∞–º–æ–º –¥–µ–ª–µ –Ω–µ –Ω—É–∂–Ω–æ, –∏–¥–µ—Ç –∫ –ø—Å–µ–≤–¥–æ—Ü–µ–ª—è–º.";
        } else if ((month == 5 && day >= 21 && day <= 31) || (month == 6 && day <= 20)) {
            return " –ë–ª–∏–∑–Ω–µ—Ü—ã. –ë–ª–∏–∑–Ω–µ—Ü—ã –ª—é–±—è—Ç –º–Ω–æ–≥–æ —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω–æ–≥–æ –æ–±—â–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä–æ–µ —Ä–∞—Å—à–∏—Ä—è–µ—Ç –∏—Ö –∫—Ä—É–≥–æ–∑–æ—Ä. –£ –Ω–∏—Ö –º–Ω–æ–∂–µ—Å—Ç–≤–æ –ø—Ä–∏—è—Ç–µ–ª–µ–π –∏ –∑–Ω–∞–∫–æ–º—ã—Ö. –ù–æ –ø–æ-–Ω–∞—Å—Ç–æ—è—â–µ–º—É –∫—Ä–µ–ø–∫–æ –¥—Ä—É–∂–∞—Ç –æ–Ω–∏ –æ—á–µ–Ω—å —Ä–µ–¥–∫–æ. –í–µ–¥—å –¥—Ä—É–∂–±–∞ ‚Äî —ç—Ç–æ —É–∂–µ –≥–ª—É–±–æ–∫–æ–µ –ø–æ–≥—Ä—É–∂–µ–Ω–∏–µ –≤ —á–µ–ª–æ–≤–µ–∫–∞. –ê —ç—Ç–æ –æ—Ç–Ω–∏–º–∞–µ—Ç —É –ë–ª–∏–∑–Ω–µ—Ü–æ–≤ —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ —ç–Ω–µ—Ä–≥–∏–∏ –∏ –¥—É—à–µ–≤–Ω—ã—Ö —Å–∏–ª. –° –±–ª–∏–∑–∫–∏–º–∏ –ª—é–¥—å–º–∏ –º–æ–≥—É—Ç –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å —Ç–æ, —á–µ–≥–æ –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç –≤—Å–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–º: –¥—É—à–µ–≤–Ω—É—é –Ω–µ–∂–Ω–æ—Å—Ç—å –∏ —Ä–∞–Ω–∏–º–æ—Å—Ç—å.";
        } else if ((month == 6 && day >= 21 && day <= 30) || (month == 7 && day <= 22)) {
            return " –†–∞–∫. –°–∏–ª—å–Ω—ã–π –∏ —Å–ª–∞–±—ã–π, –¥—É—à–µ–≤–Ω—ã–π –∏ —Ö–æ–ª–æ–¥–Ω—ã–π, –∫–æ–º–º—É–Ω–∏–∫–∞–±–µ–ª—å–Ω—ã–π –∏ –∑–∞—Ç–≤–æ—Ä–Ω–∏—á–µ—Å–∫–∏–π ‚Äî –≤—Å–µ —ç—Ç–æ –†–∞–∫. –î–µ—Ç—Å—Ç–≤–æ, —é–Ω–æ—Å—Ç—å, —Å–µ–º—å—è, —É–ø–∞–≤—à–∏–µ (–∏–ª–∏ –Ω–µ—Ç) –Ω–∞ –≥–æ–ª–æ–≤—É –ø—Ä–æ–±–ª–µ–º—ã ‚Äî –≤—Å–µ —ç—Ç–æ –º–æ–∂–µ—Ç —Å–æ–∑–¥–∞—Ç—å –∏–∑ –æ–¥–Ω–æ–≥–æ –∏ —Ç–æ–≥–æ –∂–µ –†–∞–∫–∞ –¥–∏–∞–º–µ—Ç—Ä–∞–ª—å–Ω–æ –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–ª–æ–∂–Ω—ã—Ö –ª—é–¥–µ–π.";
        } else if ((month == 7 && day >= 23 && day <= 31) || (month == 8 && day <= 22)) {
            return " –õ–µ–≤ ‚Äî –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –ª—é–±–≤–∏. –û–Ω –¥–µ–ª–∏—Ç—Å—è –µ–π —Å–æ –≤—Å–µ–º–∏, –Ω–æ –Ω–µ–æ–±—ã—á–∞–π–Ω–æ –º–Ω–æ–≥–æ –ª—é–±–≤–∏ —Å –µ–≥–æ —Å—Ç–æ—Ä–æ–Ω—ã –ø–æ–ª—É—á–∞–µ—Ç –∏–º–µ–Ω–Ω–æ –ø–∞—Ä—Ç–Ω–µ—Ä –∏ –¥—Ä—É–≥–∏–µ —á–ª–µ–Ω—ã —Å–µ–º—å–∏. –•–∞—Ä–∏–∑–º–∞ –∏ —Ç–µ–º–ø–µ—Ä–∞–º–µ–Ω—Ç–Ω–æ—Å—Ç—å, —è—Ä–∫–æ—Å—Ç—å –∏ –æ–≥–æ–Ω—å –≤ –≥–ª–∞–∑–∞—Ö ‚Äî –õ—å–≤—ã –ª—é–±–≤–µ–æ–±–∏–ª—å–Ω—ã, —Ä–æ–º–∞–Ω—Ç–∏—á–Ω—ã, –Ω–µ –±–æ—è—Ç—Å—è –ø—Ä–æ—è–≤–ª—è—Ç—å —Å–µ–±—è –≤ –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö, –ø–æ–≥—Ä—É–∂–∞—Ç—å—Å—è –≤ –º–∏—Ä –ø–∞—Ä—Ç–Ω–µ—Ä–∞.";
        } else if ((month == 8 && day >= 23 && day <= 31) || (month == 9 && day <= 22)) {
            return " –î–µ–≤–∞ ‚Äî –Ω–∞—Å—Ç–æ—è—â–∏–π —Ä–µ–∞–ª–∏—Å—Ç. –û–Ω–∞ —Å–º–æ—Ç—Ä–∏—Ç –Ω–∞ –∂–∏–∑–Ω—å —Ç–∞–∫, —á—Ç–æ —Ç–∞ –∏–Ω–æ–≥–¥–∞ –∫–∞–∂–µ—Ç—Å—è –µ–π –Ω–µ–º–Ω–æ–≥–æ —Å—Ç—Ä–∞—à–Ω–æ–π. –ù–æ –ø—Ä–∏ —ç—Ç–æ–º –î–µ–≤–∞ –Ω–µ –±–æ–∏—Ç—Å—è –±—Ä–∞—Ç—å –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å, —É–º–µ–µ—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å—Å—è —Å –¥–µ–Ω—å–≥–∞–º–∏ –∏ –∑–Ω–∞–µ—Ç –∏–º —Ü–µ–Ω—É. –¶–µ–Ω–Ω–æ—Å—Ç–∏ –î–µ–≤ —á–∞—Å—Ç–æ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç —Å —Ü–µ–Ω–Ω–æ—Å—Ç—è–º–∏ –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–∞ –ª—é–¥–µ–π. –î–ª—è –Ω–∏—Ö –≥–æ—Ä–∞–∑–¥–æ –≤–∞–∂–Ω–µ–µ –ø–æ—Ä—è–¥–æ–∫, —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å, —Å–µ–º—å—è. –ü—Ä–∏ —ç—Ç–æ–º –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—å –∑–Ω–∞–∫–∞ –æ—á–µ–Ω—å —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω –∫ —ç–Ω–µ—Ä–≥–∏–∏ –æ–∫—Ä—É–∂–∞—é—â–∏—Ö. –•–æ—Ç—å —Ä–∞–∑—É–º –∏ –±–µ—Ä–µ—Ç –≤–µ—Ä—Ö –Ω–∞–¥ —á—É–≤—Å—Ç–≤–∞–º–∏, –î–µ–≤–µ —á–∞—Å—Ç–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—Ä–µ–º—è, —á—Ç–æ–±—ã –ø—Ä–∏–π—Ç–∏ –≤ —Å–µ–±—è –ø–æ—Å–ª–µ –æ–±—â–µ–Ω–∏—è —Å –±–æ–ª—å—à–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –ª—é–¥–µ–π.";
        } else if ((month == 9 && day >= 23 && day <= 30) || (month == 10 && day <= 22)) {
            return " –í–µ—Å—ã. –ö –¥–æ—Å—Ç–æ–∏–Ω—Å—Ç–≤–∞–º –í–µ—Å–æ–≤ –º–æ–∂–Ω–æ –æ—Ç–Ω–µ—Å—Ç–∏ –æ–±–∞—è–Ω–∏–µ, –¥—Ä—É–∂–µ–ª—é–±–∏–µ, –æ–±—â–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å, –¥–∏–ø–ª–æ–º–∞—Ç–∏—á–Ω–æ—Å—Ç—å, —Å–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ—Å—Ç—å, —á–µ—Å—Ç–Ω–æ—Å—Ç—å, —Ç–∞–∫—Ç–∏—á–Ω–æ—Å—Ç—å, –∫—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—å, –æ—Å—Ç—Ä—ã–π —É–º, –ª–æ–≥–∏–∫–∞, –ø—Ä–µ–∫—Ä–∞—Å–Ω—ã–π –≤–∫—É—Å. \n" +
                    "\n" +
                    "–ù–µ–¥–æ—Å—Ç–∞—Ç–∫–∏ —É –Ω–∏—Ö —Ç–æ–∂–µ –∏–º–µ—é—Ç—Å—è. –ö –Ω–∏–º –æ—Ç–Ω–æ—Å—è—Ç—Å—è: –Ω–µ–ø–æ—Å—Ç–æ—è–Ω—Å—Ç–≤–æ, –Ω–µ—Ä–µ—à–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å, –Ω–µ—É–º–µ–Ω–∏–µ –ø—Ä–∏–Ω–∏–º–∞—Ç—å —Ä–µ—à–µ–Ω–∏—è, —Å—Ç—Ä–∞—Ö —Å–¥–µ–ª–∞—Ç—å –æ—à–∏–±–∫—É, –æ—Ç–æ—Ä–≤–∞–Ω–Ω–æ—Å—Ç—å –æ—Ç —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏, –Ω–µ–ø—Ä–∞–∫—Ç–∏—á–Ω–æ—Å—Ç—å.";
        } else if ((month == 10 && day >= 23 && day <= 31) || (month == 11 && day <= 21)) {
            return " –°–∫–æ—Ä–ø–∏–æ–Ω. –î–æ—Å—Ç–æ–∏–Ω—Å—Ç–≤–∞ –°–∫–æ—Ä–ø–∏–æ–Ω–∞: —Å–∏–ª–∞ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∞, —Å—Ç–æ–π–∫–æ—Å—Ç—å, —É–ø–æ—Ä—Å—Ç–≤–æ, —Ü–µ–ª–µ—É—Å—Ç—Ä–µ–º–ª–µ–Ω–Ω–æ—Å—Ç—å, –∞–º–±–∏—Ü–∏–æ–∑–Ω–æ—Å—Ç—å, –≤–µ—Ä–Ω–æ—Å—Ç—å, –±–µ—Å–∫–æ—Ä—ã—Å—Ç–Ω–æ—Å—Ç—å, —Ç–µ—Ä–ø–µ–Ω–∏–µ, —Å—Ç—Ä–µ–º–ª–µ–Ω–∏–µ –∫ —Å–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤—É, —Å–∏–ª—å–Ω–∞—è –∏–Ω—Ç—É–∏—Ü–∏—è.\n" +
                    "\n" +
                    "–ù–µ–¥–æ—Å—Ç–∞—Ç–∫–∏: –≤–ª–∞—Å—Ç–Ω–æ—Å—Ç—å, —Ä–µ–≤–Ω–æ—Å—Ç—å, –º—Å—Ç–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å, —Å–∫—Ä—ã—Ç–Ω–æ—Å—Ç—å, –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–æ—Å—Ç—å, –æ–±–∏–¥—á–∏–≤–æ—Å—Ç—å, —ç–≥–æ–∏–∑–º.";
        } else if ((month == 11 && day >= 22 && day <= 30) || (month == 12 && day <= 21)) {
            return " –°—Ç—Ä–µ–ª–µ—Ü. –°—Ç—Ä–µ–ª—å—Ü—ã –æ—á–µ–Ω—å –≤–ª—é–±—á–∏–≤—ã, –æ–Ω–∏ –≥–æ—Ç–æ–≤—ã –±—ã—Å—Ç—Ä–æ —É–≤–ª–µ–∫–∞—Ç—å—Å—è –∏ –≤—Å–ø—ã—Ö–∏–≤–∞—Ç—å –æ—Ç –Ω–æ–≤—ã—Ö —á—É–≤—Å—Ç–≤. –ì–ª–∞–≤–Ω—ã–º –º–∏–Ω—É—Å–æ–º —ç—Ç–∏—Ö —Ä–æ–º–∞–Ω—Ç–∏–∫–æ–≤ —è–≤–ª—è–µ—Ç—Å—è –Ω–µ–ø–æ—Å—Ç–æ—è–Ω—Å—Ç–≤–æ. –°—Ç—Ä–µ–ª—å—Ü—ã –º–æ–≥—É—Ç –¥–æ–ª–≥–æ–µ –≤—Ä–µ–º—è –∏–¥–µ–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø–∞—Ä—Ç–Ω–µ—Ä–∞, –∞ –ø–æ—Ç–æ–º –ø–æ —â–µ–ª—á–∫—É ¬´–ø—Ä–æ–∑—Ä–µ—Ç—å¬ª. –ï—Å–ª–∏ –Ω–µ—Å—á–∞—Å—Ç–Ω—ã–π –∏–∑–≥–Ω–∞–Ω —Å –ø—å–µ–¥–µ—Å—Ç–∞–ª–∞, —Ç–æ –µ–º—É –Ω–µ –ø–æ–∑–¥–æ—Ä–æ–≤–∏—Ç—Å—è.\n" +
                    "\n" +
                    "–û–±–∏–¥—á–∏–≤–æ—Å—Ç—å –°—Ç—Ä–µ–ª—å—Ü–æ–≤ –º–æ–∂–µ—Ç –ø–æ—Ä–æ–∂–¥–∞—Ç—å –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã. –ú—É–∑–µ –°—Ç—Ä–µ–ª—å—Ü–∞ —Å—Ç–æ–∏—Ç –ø—Ä–∏–≥–æ—Ç–æ–≤–∏—Ç—å—Å—è –∫ –Ω–µ –≤—Å–µ–≥–¥–∞ –æ–ø—Ä–∞–≤–¥–∞–Ω–Ω–æ–π —Ä–µ–≤–Ω–æ—Å—Ç–∏. –í —Ç–æ –∂–µ –≤—Ä–µ–º—è, –≤ –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö –°—Ç—Ä–µ–ª—å—Ü—ã —â–µ–¥—Ä—ã –Ω–∞ –ª–∞—Å–∫—É, –ø—Ä–µ–∑–µ–Ω—Ç—ã –∏ —Ç–µ–ø–ª—ã–µ —Å–ª–æ–≤–∞.";
        } else if ((month == 12 && day >= 22 && day <= 31) || (month == 1 && day <= 19)) {
            return " –ö–æ–∑–µ—Ä–æ–≥ \n" +
                    "–î–æ—Å—Ç–æ–∏–Ω—Å—Ç–≤–∞:\n" +
                    "\n" +
                    "–°–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –∫ —Å–∞–º–æ–¥–∏—Å—Ü–∏–ø–ª–∏–Ω–µ, —Ä–µ—à–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å, –ø—Ä–∞–∫—Ç–∏—á–Ω–æ—Å—Ç—å, –∞–º–±–∏—Ü–∏–æ–∑–Ω–æ—Å—Ç—å, —Ä–∞—Å—á–µ—Ç–ª–∏–≤–æ—Å—Ç—å, —É–ø–æ—Ä—Å—Ç–≤–æ –≤ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏ —Ü–µ–ª–∏, –ø—Ä–æ–Ω–∏—Ü–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å, –ø–æ—Å—Ç–æ—è–Ω—Å—Ç–≤–æ, —Ç—Ä—É–¥–æ–ª—é–±–∏–µ, –≤–µ–∂–ª–∏–≤–æ—Å—Ç—å.\n" +
                    "\n" +
                    "–ù–µ–¥–æ—Å—Ç–∞—Ç–∫–∏:\n" +
                    "\n" +
                    "–°–≤–æ–µ–Ω—Ä–∞–≤–Ω–æ—Å—Ç—å, –≤–ª–∞—Å—Ç–æ–ª—é–±–∏–µ, –∫–æ–≤–∞—Ä—Å—Ç–≤–æ, –∂–µ—Å—Ç–æ–∫–æ—Å—Ç—å, –ª—é–±–æ–≤—å –∫ —Ä–æ—Å–∫–æ—à–∏ –∏ –∫–æ–º—Ñ–æ—Ä—Ç—É. –ù–µ –≥–æ—Ç–æ–≤—ã –ø–æ–¥–ø—É—Å–∫–∞—Ç—å –∫ —Å–µ–±–µ –Ω–æ–≤—ã—Ö –ª—é–¥–µ–π.";
        } else if ((month == 1 && day >= 20 && day <= 31) || (month == 2 && day <= 18)) {
            return " –í–æ–¥–æ–ª–µ–π. –ï—Å–ª–∏ –≥–æ–≤–æ—Ä–∏—Ç—å –æ —Å–∏–ª—å–Ω—ã—Ö —Å—Ç–æ—Ä–æ–Ω–∞—Ö –í–æ–¥–æ–ª–µ—è, —Ç–æ, –≤ –ø–µ—Ä–≤—É—é –æ—á–µ—Ä–µ–¥—å, —ç—Ç–æ –µ–≥–æ —Ü–µ–ª–µ—É—Å—Ç—Ä–µ–º–ª–µ–Ω–Ω–æ—Å—Ç—å, —É–º–µ–Ω–∏–µ –Ω–∞–π—Ç–∏ –≤—ã—Ö–æ–¥ –∏–∑ –ª—é–±–æ–π —Å–ª–æ–∂–Ω–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏, –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –∑–∞ —Å–µ–±—è –∏ —Å–≤–æ–∏—Ö –±–ª–∏–∑–∫–∏—Ö. –ü—Ä–∏—á–µ–º –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã –í–æ–¥–æ–ª–µ–∏ –≤–æ –≤—Å–µ–º ‚Äî –Ω–∞ —Ä–∞–±–æ—Ç–µ, –ø–µ—Ä–µ–¥ –Ω–∞—á–∞–ª—å—Å—Ç–≤–æ–º, –ø–µ—Ä–µ–¥ –¥—Ä—É–∑—å—è–º–∏, –∞ –≥–ª–∞–≤–Ω–æ–µ ‚Äî –ø–µ—Ä–µ–¥ —Å–≤–æ–µ–π —Å–µ–º–µ–π. –ê –µ—â–µ –í–æ–¥–æ–ª–µ–∏ –¥–æ–≤–æ–ª—å–Ω–æ —á–∞—Å—Ç–æ –±—ã–≤–∞—é—Ç –ø—Ä–µ–∫—Ä–∞—Å–Ω—ã–º–∏ —Ä–æ–¥–∏—Ç–µ–ª—è–º–∏, –∫–æ—Ç–æ—Ä—ã–µ —É–º–µ—é—Ç –Ω–∞–π—Ç–∏ –ø–æ–¥—Ö–æ–¥ –∫ —Å–≤–æ–∏–º –¥–µ—Ç—è–º, –Ω–µ –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞—è—Å—å —Å–∫—É—á–Ω—ã–º–∏ —à—Ç–∞–º–ø–∞–º–∏ –∏–∑ –∫–Ω–∏–≥ –ø–æ –≤–æ—Å–ø–∏—Ç–∞–Ω–∏—é.";
        } else if ((month == 2 && day >= 19 && day <= 29) || (month == 3 && day <= 30)) {
            return " –†—ã–±—ã. –ì–ª–∞–≤–Ω—ã–º –¥–æ—Å—Ç–æ–∏–Ω—Å—Ç–≤–æ–º –†—ã–± –≤ –Ω–∞—à–µ –≤—Ä–µ–º—è —è–≤–ª—è–µ—Ç—Å—è —á–µ—Å—Ç–Ω–æ—Å—Ç—å. –î–∞–∂–µ –µ—Å–ª–∏ –≤ –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö —Å–ª—É—á–∞—è—Ö –±—É–¥–µ—Ç –≤—ã–≥–æ–¥–Ω–æ —Å–æ–ª–≥–∞—Ç—å, –≤ —Å–∏–ª—É –∏—Ö –¥–æ–±—Ä–æ–ø–æ—Ä—è–¥–æ—á–Ω–æ—Å—Ç–∏ —ç—Ç–æ–≥–æ –Ω–µ —Å–ª—É—á–∏—Ç—Å—è.\n" +
                    "\n" +
                    "–¢—Ä—É–¥–æ–ª—é–±–∏–µ –ø—Ä–∏—Å—É—â–µ –†—ã–±–∞–º, –Ω–æ —Ç–æ–ª—å–∫–æ —Ç–æ–≥–¥–∞, –∫–æ–≥–¥–∞ –Ω–∏–∫—Ç–æ –Ω–µ –≤–∏–¥–∏—Ç. –¢–∞–∫ –∫–∞–∫ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª–∏ —ç—Ç–æ–≥–æ –∑–Ω–∞–∫–∞ ‚Äî —Ç–≤–æ—Ä—á–µ—Å–∫–∏–µ –Ω–∞—Ç—É—Ä—ã, –¥–ª—è —Ä–∞–±–æ—Ç—ã –∏–º –Ω—É–∂–Ω–æ —É–µ–¥–∏–Ω–∏—Ç—å—Å—è. –í–æ–¥–Ω—ã–µ –∑–Ω–∞–∫–∏ –Ω–µ –ª—é–±—è—Ç –¥–µ–ª–∞—Ç—å —á—Ç–æ-—Ç–æ –Ω–∞–ø–æ–∫–∞–∑, –ø–æ—ç—Ç–æ–º—É –∏ —Ç—Ä—É–¥–∏—Ç—å—Å—è –ø—Ä–∏–≤—ã–∫–ª–∏ –≤ –æ–¥–∏–Ω–æ—á–∫—É.";
        } else return " –í—ã –≤–≤–µ–ª–∏ –¥–∏—á—å! –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é –¥–∞—Ç—É –¥–¥.–º–º, –ø—Ä–∏–º–µ—Ä 19.11";

//
    }

    private String oven() {
        return " –û–≤–µ–Ω –ª–∏—á–Ω–æ—Å—Ç—å –∫—Ä–∞–π–Ω–µ —Ü–µ–ª–µ—É—Å—Ç—Ä–µ–º–ª—ë–Ω–Ω–∞—è. –ß—Ç–æ –º–æ–∂–Ω–æ –∑–∞–ø–∏—Å–∞—Ç—å –∫–∞–∫ –≤ –ø–ª—é—Å, —Ç–∞–∫ –∏ –≤ –º–∏–Ω—É—Å, –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—é –∑–Ω–∞–∫–∞. –ï—Å–ª–∏ –æ–Ω –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —á–µ–º-—Ç–æ —É–≤–ª–µ—á—ë–Ω, –æ–Ω, –±–µ–∑ –ø—Ä–µ—É–≤–µ–ª–∏—á–µ–Ω–∏—è, –≥–æ—Ç–æ–≤ –Ω–∞ –≤—Å—ë —Ä–∞–¥–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Ü–µ–ª–∏. –ì–ª–∞–≤–Ω–æ–µ ‚Äî —É—Å–ø–µ—Ç—å –µ—ë –¥–æ—Å—Ç–∏—á—å –¥–æ —É—Ç—Ä–∞—Ç—ã –∏–Ω—Ç–µ—Ä–µ—Å–∞.";
    }
//    private String telec() {
//        return
//    }
//    private String blizneci() {
//        return
//    }
//
//    private String rak() {
//        return
//    }
//    private String lion() {
//
//    }
//    private String deva() {
//        return
//    }
//    private String veci() {
//        return
//    }

}
