package com.telebotZodiac.bot.listener;

import com.pengrad.telegrambot.TelegramBot;
import com.pengrad.telegrambot.UpdatesListener;
import com.pengrad.telegrambot.model.Update;
import com.pengrad.telegrambot.model.request.InlineKeyboardButton;
import com.pengrad.telegrambot.model.request.InlineKeyboardMarkup;
import com.pengrad.telegrambot.request.SendMessage;
import com.telebotZodiac.bot.service.ShelterService;
import com.telebotZodiac.bot.shelter.ShelterGoroskop;
import jakarta.annotation.PostConstruct;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.List;
import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;



@Service

public class TelegramBotUpdatesListener implements UpdatesListener {
    //    –¥–µ–ª–∞–µ–º —Å—Ç–∞—Ç–∏–∫–∏ –∫–Ω–æ–ø–æ–∫ –æ –∫–ª–∞—Å—Å–∏–∫–µ
    private static final String GOROSKOP_CLASSIC_BUTTON = "–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π –≥–æ—Ä–æ—Å–∫–æ–ø ‚ôà‚ôâ‚ôä‚ôã‚ôå‚ôç‚ôé";
    private static final String CALLBACK_SHOW_INFO_CLASSIC = "SHOW_INFO_CLASSIC";
    private static final String CALLBACK_SHOW_DESCRIPTION_CLASSIC = "SHOW_INSTRUCTION_CLASSIC";


//    –¥–µ–ª–∞–µ–º –∫–Ω–æ–ø–∫–∏ –æ –∫–∏—Ç–∞–π—Å–∫–æ–º

    private static final String GOROSKOP_CHINA_BUTTON = "–ö–∏—Ç–∞–π—Å–∫–∏–π –≥–æ—Ä–æ—Å–∫–æ–ø üêÄüêÇüêÖüêáüêâüêçüêé";
    private static final String CALLBACK_SHOW_INFO_CHINA = "SHOW_INFO_CHINA";
    private static final String CALLBACK_SHOW_DESCRIPTION_CHINA = "SHOW_INSTRUCTION_CHINA";


    private static final Pattern PATTERN = Pattern.compile("(^[+|8][0-9\\s]+)\\s(\\w*@.+\\D$)");
    // –¥–µ–ª–∞–µ–º –ª–æ–≥–∏ –ø–æ –ª–∏—Å—Ç–µ–Ω–µ—Ä—É
    private Logger logger = LoggerFactory.getLogger(TelegramBotUpdatesListener.class);


    //       @Autowired
    private TelegramBot telegramBot;

    private final ShelterService shelterService;


    public TelegramBotUpdatesListener(TelegramBot telegramBot, ShelterService shelterService) {
        this.telegramBot = telegramBot;
        this.shelterService = shelterService;
    }

    @PostConstruct
    public void init() {
        telegramBot.setUpdatesListener(this);
    }

//    —Å–æ–∑–¥–∞–Ω–∏–µ —Å—Ç–∞—Ä—Ç–∞, –∏ –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–∏–µ –ø–∞—Ç—Ç–µ—Ä–Ω–∞, –ø–∞—Ç—Ç–µ–Ω—Ä –ø—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –æ—à–∏–±–∫–∏


    @Override
    public int process(List<Update> updates) {
        updates.forEach(update -> {
            logger.info("Processing update: {}", update);
            if (update.message() != null && "/start".equals(update.message().text())) {
                startMessage(update);
            } else if (update.callbackQuery() != null) {
                processCallbackQuery(update);

//—Ç–∞–∫ –º—ã –ø–æ–ª—É—á–∞–µ–º –≤–æ–¥–æ–ª–µ—è –ø—Ä–∏ –≤–≤–µ–¥–µ–Ω–∏–∏ 01.02 - —Ç–µ —Ä–∞–±–æ—á–∏–π –∫–æ–¥
            } else if (update.message() != null && "01.02".equals(update.message().text())) {
            } else if (update.message() != null && "01:02:2222".equals(update.message().text())) {

            } else if (update.message() != null && update.message().text().equals(update.message().text())) {

                String messageText = update.message().text();
                String name = update.message().chat().firstName();

//                if (update.hasMessage() && update.getMessage().hasText()) {
//                    String messageText = update.getMessage().getText();
//                    long chatId = update.getMessage().getChatId();
//
//                    if (messageText.matches("[0-3]?[0-9].[0-1]?[0-9]")) {
//                        String[] dateParts = messageText.split("\\.");
//                        int day = Integer.parseInt(dateParts[0]);
//                        int month = Integer.parseInt(dateParts[1]);
//
//                        String zodiacSign = getZodiacSign(day, month);
//
//                        sendMessage(chatId, "–í–∞—à –∑–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞: " + zodiacSign);
//                    } else {
//                        sendMessage(chatId, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –¥–µ–Ω—å –∏ –º–µ—Å—è—Ü –≤ —Ñ–æ—Ä–º–∞—Ç–µ '–¥–¥.–º–º'");
//                    }
//                }

                String msg = "–ü—Ä–∏–≤–µ—Ç, " + name;
                long chatId = update.message().chat().id();

                SendMessage sendMessage = new SendMessage(chatId, msg);
                telegramBot.execute(sendMessage);

//                if (update.hasMessage() && update.getMessage().hasText()) {
//                    String messageText = update.getMessage().getText();
//                    long chatId = update.getMessage().getChatId();

                    if (messageText.matches("[0-3]?[0-9].[0-1]?[0-9]")) {
                        String[] dateParts = messageText.split("\\.");
                        int day = Integer.parseInt(dateParts[0]);
                        int month = Integer.parseInt(dateParts[1]);
//
                        String zodiacSign = getZodiacSign(day, month);
//
                      SendMessage sendMessage2 = new SendMessage(chatId, "–í–∞—à –∑–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞: " + zodiacSign);
                        telegramBot.execute(sendMessage2);
                    } else {
                        SendMessage sendMessage3 = new SendMessage(chatId, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –¥–µ–Ω—å –∏ –º–µ—Å—è—Ü –≤ —Ñ–æ—Ä–º–∞—Ç–µ '–¥–¥.–º–º'");
                        telegramBot.execute(sendMessage3);
                    }


            }
//            else {
//                failedMessage(update.message().chat().id());
//            }
        });
        return UpdatesListener.CONFIRMED_UPDATES_ALL;
    }


    public void startMessage(Update update) {
        String name = update.message().chat().firstName();
        String msg = "–ü—Ä–∏–≤–µ—Ç, " + name + "! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç-–≥–æ—Ä–æ—Å–∫–æ–ø." +
                " –ù–∞–º–∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω—ã –≥–æ—Ä–æ—Å–∫–æ–ø—ã —Ä–∞–∑–Ω—ã—Ö –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π: –ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π –∏ –ö–∏—Ç–∞–π—Å–∫–∏–π" +
                " –í—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≥–æ—Ä–æ—Å–∫–æ–ø–µ,  " +
                "–∞ —Ç–∞–∫ –∂–µ –ø–æ –¥–∞—Ç–µ —Ä–æ–∂–¥–µ–Ω–∏—è –≤—ã –º–æ–∂–µ—Ç–µ —É–∑–Ω–∞—Ç—å —á—É—Ç—å –±–æ–ª—å—à–µ –æ —Å–µ–±–µ.";

//        updates.forEach(update -> {
//            logger.info("Processing update: {}", update);
//            String msg = update.message().text();
//            if (msg.equals("/start")) {
//                SendMessage message = new SendMessage(
//                        update.message().chat().id(),
//                        String.format("–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ %s, –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç-–≥–æ—Ä–æ—Å–∫–æ–ø.  –í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ dd.MM.yyyy (–ø—Ä–∏–º–µ—Ä: 12.02.2023) –∏ –≤—ã —É–∑–Ω–∞–µ—Ç–µ, —á—Ç–æ –æ–∂–∏–¥–∞–µ—Ç –¥–∞–Ω–Ω—ã–π –∑–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞.", update.message().chat().firstName())
//                );
//                logger.info("Start button has been activated ^)");
//                telegramBot.execute(message);
        long id = update.message().chat().id();
//        —Ç—É—Ç –º—ã –ø—Ä–∏–∫—Ä—É—á–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ –≤ –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é
        InlineKeyboardButton[] buttonsRow = {
                new InlineKeyboardButton(GOROSKOP_CLASSIC_BUTTON).callbackData(GOROSKOP_CLASSIC_BUTTON)};
        InlineKeyboardButton[] buttonsRow2 = {
                new InlineKeyboardButton(GOROSKOP_CHINA_BUTTON).callbackData(GOROSKOP_CHINA_BUTTON)};
        InlineKeyboardMarkup inlineKeyboard = new InlineKeyboardMarkup(buttonsRow, buttonsRow2);
        SendMessage sendMessage = new SendMessage(id, msg);
        sendMessage.replyMarkup(inlineKeyboard);
        telegramBot.execute(sendMessage);
    }


    private void processCallbackQuery(Update update) {
        Long chatId = update.callbackQuery().message().chat().id();
//
        if (GOROSKOP_CLASSIC_BUTTON.equalsIgnoreCase(update.callbackQuery().data())) {
            createButtonClassicZodiacShelter(chatId);
        } else if (GOROSKOP_CHINA_BUTTON.equalsIgnoreCase(update.callbackQuery().data())) {
            createButtonChinaZodiacShelter(chatId);
        } else if (CALLBACK_SHOW_DESCRIPTION_CLASSIC.equalsIgnoreCase(update.callbackQuery().data())) {
            sendShelterDescription(chatId, ShelterGoroskop.CLASSIC);
        } else if (CALLBACK_SHOW_DESCRIPTION_CHINA.equalsIgnoreCase(update.callbackQuery().data())) {
            sendShelterDescription(chatId, ShelterGoroskop.CHINA);
        } else if (CALLBACK_SHOW_INFO_CLASSIC.equalsIgnoreCase(update.callbackQuery().data())) {
            sendShelterInstruction(chatId, ShelterGoroskop.CLASSIC);
        } else if (CALLBACK_SHOW_INFO_CHINA.equalsIgnoreCase(update.callbackQuery().data())) {
            sendShelterInstruction(chatId, ShelterGoroskop.CHINA);
//        } else if (CALLBACK_SHOW_INFO_CATS.equalsIgnoreCase(update.callbackQuery().data())) {
//            sendShelterInfo(chatId, ShelterType.CAT);
//        } else if (CALLBACK_SHOW_MENU_REPORT.equalsIgnoreCase(update.callbackQuery().data())) {
//            createButtonsReportMenu(chatId);
//        } else if (CALLBACK_CHOOSE_SEND_REPORT.equalsIgnoreCase(update.callbackQuery().data())) {
//            sendReportMessage(chatId);
//        } else if (CALLBACK_CHOOSE_FORM_REPORT.equalsIgnoreCase(update.callbackQuery().data())) {
//            sendReportForm(chatId);
        }
    }

    //–¥–æ—Ä–∞–±–æ—Ç–∞—Ç—å –±–∞—Ç—Ç–æ–Ω –∏–Ω—Ñ–æ
    private void createButtonInfoMenu(Long chatId, String dataUser, String dataGoroscop) {
        String msg = "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:";
        InlineKeyboardButton[] buttonsRowForDataUser = {
                new InlineKeyboardButton("–í–≤–æ–¥–∏–º —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ - –ø–æ –¥–∞—Ç–µ ‚å® ").callbackData(dataUser)};
        InlineKeyboardButton[] buttonsRowForDataGoroscop = {
                new InlineKeyboardButton(" \uD83D\uDEC8 –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≥–æ—Ä–æ—Å–∫–æ–ø–µ \uD83E\uDDD0").callbackData(dataGoroscop)};

        InlineKeyboardMarkup inlineKeyboard = new InlineKeyboardMarkup(buttonsRowForDataUser, buttonsRowForDataGoroscop);
        SendMessage sendMessage = new SendMessage(chatId, msg);
        sendMessage.replyMarkup(inlineKeyboard);
        telegramBot.execute(sendMessage);

    }

    private void createButtonClassicZodiacShelter(Long chatId) {
        createButtonInfoMenu(chatId, CALLBACK_SHOW_INFO_CLASSIC, CALLBACK_SHOW_DESCRIPTION_CLASSIC);
    }

    private void createButtonChinaZodiacShelter(Long chatId) {
        createButtonInfoMenu(chatId, CALLBACK_SHOW_INFO_CHINA, CALLBACK_SHOW_DESCRIPTION_CHINA);
//    }
    }

    private void sendShelterDescription(Long chatId, ShelterGoroskop type) {
        SendMessage sendMessage = new SendMessage(chatId, shelterService.getDescription(type));
        telegramBot.execute(sendMessage);
    }

    private void sendShelterInstruction(Long chatId, ShelterGoroskop type) {
        SendMessage sendMessage = new SendMessage(chatId, shelterService.getInstruction(type));
        telegramBot.execute(sendMessage);
    }

    private void failedMessage(Long chatId) {
        String msg = "–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –Ω–µ –ø–æ–Ω–∏–º–∞—é —á—Ç–æ –¥–µ–ª–∞—Ç—å";
        SendMessage sendMessage = new SendMessage(chatId, msg);
        telegramBot.execute(sendMessage);
    }

    private boolean checkMessagePattern(String text) {
        Matcher matcher = PATTERN.matcher(text);
        return matcher.matches();
    }



    private String getZodiacSign(int day, int month) {
        // –†–µ–∞–ª–∏–∑—É–π—Ç–µ –ª–æ–≥–∏–∫—É –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∑–Ω–∞–∫–∞ –∑–æ–¥–∏–∞–∫–∞ –∑–¥–µ—Å—å

        // –ü—Ä–∏–º–µ—Ä —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏:
        if ((month == 3 && day >= 21) || (month == 4 && day <= 19)) {
            return oven();
        } else if ((month == 4 && day >= 20) || (month == 5 && day <= 20)) {
            return " –¢–µ–ª—å—Ü—ã ‚Äî –ª–∏—á–Ω–æ—Å—Ç–∏ –æ—á–µ–Ω—å —Å–∏–ª—å–Ω—ã–µ –∏ –æ–± —ç—Ç–æ–º —É–∂–µ –±—ã–ª–æ —Å–∫–∞–∑–∞–Ω–æ –≤—ã—à–µ. –ù–æ –∫–æ–≥–¥–∞ –∏—Ö –ª–∏—á–Ω—ã–µ –∫–∞—á–µ—Å—Ç–≤–∞ —Å—Ç–∞–Ω–æ–≤—è—Ç—Å—è –≥–∏–ø–µ—Ä—Ç—Ä–æ—Ñ–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –∏ –≤—ã—Ö–æ–¥—è—Ç –∑–∞ —Ä–∞–º–∫–∏, —Å –Ω–∏–º–∏ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –æ—á–µ–Ω—å —Ç—è–∂–µ–ª–æ. –û–Ω–∏ —É–ø–æ—Ä–Ω—ã –∏ —Ç—Ä—É–¥–æ–ª—é–±–∏–≤—ã, –≥–æ—Ç–æ–≤—ã –≥–æ–¥–∞–º–∏ –º–Ω–æ–≥–æ —Ç—Ä—É–¥–∏—Ç—å—Å—è, —á—Ç–æ–±—ã –¥–æ–±–∏—Ç—å—Å—è –∂–µ–ª–∞–µ–º–æ–≥–æ. –ù–æ –±—ã–≤–∞–µ—Ç, —á—Ç–æ —ç—Ç–∏ –ø—Ä–µ–∫—Ä–∞—Å–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞ –Ω–∞—Ç—É—Ä—ã –ø—Ä–∏ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã—Ö –æ–±—Å—Ç–æ—è—Ç–µ–ª—å—Å—Ç–≤–∞—Ö —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∏—Ä—É—é—Ç—Å—è –≤ –Ω–µ–¥–æ—Å—Ç–∞—Ç–∫–∏. –ò —Ç–æ–≥–¥–∞ —á–µ–ª–æ–≤–µ–∫ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –∏–∑–ª–∏—à–Ω–µ —É–ø—Ä—è–º—ã–º, —Å—Ç–∞—Ä–∞–µ—Ç—Å—è –¥–æ–±–∏—Ç—å—Å—è —Ç–æ–≥–æ, —á—Ç–æ –Ω–∞ —Å–∞–º–æ–º –¥–µ–ª–µ –Ω–µ –Ω—É–∂–Ω–æ, –∏–¥–µ—Ç –∫ –ø—Å–µ–≤–¥–æ—Ü–µ–ª—è–º.";
        } else if ((month == 5 && day >= 21) || (month == 6 && day <= 20)) {
            return " –ë–ª–∏–∑–Ω–µ—Ü—ã. –ë–ª–∏–∑–Ω–µ—Ü—ã –ª—é–±—è—Ç –º–Ω–æ–≥–æ —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω–æ–≥–æ –æ–±—â–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä–æ–µ —Ä–∞—Å—à–∏—Ä—è–µ—Ç –∏—Ö –∫—Ä—É–≥–æ–∑–æ—Ä. –£ –Ω–∏—Ö –º–Ω–æ–∂–µ—Å—Ç–≤–æ –ø—Ä–∏—è—Ç–µ–ª–µ–π –∏ –∑–Ω–∞–∫–æ–º—ã—Ö. –ù–æ –ø–æ-–Ω–∞—Å—Ç–æ—è—â–µ–º—É –∫—Ä–µ–ø–∫–æ –¥—Ä—É–∂–∞—Ç –æ–Ω–∏ –æ—á–µ–Ω—å —Ä–µ–¥–∫–æ. –í–µ–¥—å –¥—Ä—É–∂–±–∞ ‚Äî —ç—Ç–æ —É–∂–µ –≥–ª—É–±–æ–∫–æ–µ –ø–æ–≥—Ä—É–∂–µ–Ω–∏–µ –≤ —á–µ–ª–æ–≤–µ–∫–∞. –ê —ç—Ç–æ –æ—Ç–Ω–∏–º–∞–µ—Ç —É –ë–ª–∏–∑–Ω–µ—Ü–æ–≤ —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ —ç–Ω–µ—Ä–≥–∏–∏ –∏ –¥—É—à–µ–≤–Ω—ã—Ö —Å–∏–ª. –° –±–ª–∏–∑–∫–∏–º–∏ –ª—é–¥—å–º–∏ –º–æ–≥—É—Ç –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å —Ç–æ, —á–µ–≥–æ –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç –≤—Å–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–º: –¥—É—à–µ–≤–Ω—É—é –Ω–µ–∂–Ω–æ—Å—Ç—å –∏ —Ä–∞–Ω–∏–º–æ—Å—Ç—å.";
        } else if ((month == 6 && day >= 21) || (month == 7 && day <= 22)) {
            return " –†–∞–∫. –°–∏–ª—å–Ω—ã–π –∏ —Å–ª–∞–±—ã–π, –¥—É—à–µ–≤–Ω—ã–π –∏ —Ö–æ–ª–æ–¥–Ω—ã–π, –∫–æ–º–º—É–Ω–∏–∫–∞–±–µ–ª—å–Ω—ã–π –∏ –∑–∞—Ç–≤–æ—Ä–Ω–∏—á–µ—Å–∫–∏–π ‚Äî –≤—Å–µ —ç—Ç–æ –†–∞–∫. –î–µ—Ç—Å—Ç–≤–æ, —é–Ω–æ—Å—Ç—å, —Å–µ–º—å—è, —É–ø–∞–≤—à–∏–µ (–∏–ª–∏ –Ω–µ—Ç) –Ω–∞ –≥–æ–ª–æ–≤—É –ø—Ä–æ–±–ª–µ–º—ã ‚Äî –≤—Å–µ —ç—Ç–æ –º–æ–∂–µ—Ç —Å–æ–∑–¥–∞—Ç—å –∏–∑ –æ–¥–Ω–æ–≥–æ –∏ —Ç–æ–≥–æ –∂–µ –†–∞–∫–∞ –¥–∏–∞–º–µ—Ç—Ä–∞–ª—å–Ω–æ –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–ª–æ–∂–Ω—ã—Ö –ª—é–¥–µ–π.";
        } else if ((month == 7 && day >= 23) || (month == 8 && day <= 22)) {
            return " –õ–µ–≤ ‚Äî –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –ª—é–±–≤–∏. –û–Ω –¥–µ–ª–∏—Ç—Å—è –µ–π —Å–æ –≤—Å–µ–º–∏, –Ω–æ –Ω–µ–æ–±—ã—á–∞–π–Ω–æ –º–Ω–æ–≥–æ –ª—é–±–≤–∏ —Å –µ–≥–æ —Å—Ç–æ—Ä–æ–Ω—ã –ø–æ–ª—É—á–∞–µ—Ç –∏–º–µ–Ω–Ω–æ –ø–∞—Ä—Ç–Ω–µ—Ä –∏ –¥—Ä—É–≥–∏–µ —á–ª–µ–Ω—ã —Å–µ–º—å–∏. –•–∞—Ä–∏–∑–º–∞ –∏ —Ç–µ–º–ø–µ—Ä–∞–º–µ–Ω—Ç–Ω–æ—Å—Ç—å, —è—Ä–∫–æ—Å—Ç—å –∏ –æ–≥–æ–Ω—å –≤ –≥–ª–∞–∑–∞—Ö ‚Äî –õ—å–≤—ã –ª—é–±–≤–µ–æ–±–∏–ª—å–Ω—ã, —Ä–æ–º–∞–Ω—Ç–∏—á–Ω—ã, –Ω–µ –±–æ—è—Ç—Å—è –ø—Ä–æ—è–≤–ª—è—Ç—å —Å–µ–±—è –≤ –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö, –ø–æ–≥—Ä—É–∂–∞—Ç—å—Å—è –≤ –º–∏—Ä –ø–∞—Ä—Ç–Ω–µ—Ä–∞.";
        } else if ((month == 8 && day >= 23) || (month == 9 && day <= 22)) {
            return " –î–µ–≤–∞ ‚Äî –Ω–∞—Å—Ç–æ—è—â–∏–π —Ä–µ–∞–ª–∏—Å—Ç. –û–Ω–∞ —Å–º–æ—Ç—Ä–∏—Ç –Ω–∞ –∂–∏–∑–Ω—å —Ç–∞–∫, —á—Ç–æ —Ç–∞ –∏–Ω–æ–≥–¥–∞ –∫–∞–∂–µ—Ç—Å—è –µ–π –Ω–µ–º–Ω–æ–≥–æ —Å—Ç—Ä–∞—à–Ω–æ–π. –ù–æ –ø—Ä–∏ —ç—Ç–æ–º –î–µ–≤–∞ –Ω–µ –±–æ–∏—Ç—Å—è –±—Ä–∞—Ç—å –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å, —É–º–µ–µ—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å—Å—è —Å –¥–µ–Ω—å–≥–∞–º–∏ –∏ –∑–Ω–∞–µ—Ç –∏–º —Ü–µ–Ω—É. –¶–µ–Ω–Ω–æ—Å—Ç–∏ –î–µ–≤ —á–∞—Å—Ç–æ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç —Å —Ü–µ–Ω–Ω–æ—Å—Ç—è–º–∏ –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–∞ –ª—é–¥–µ–π. –î–ª—è –Ω–∏—Ö –≥–æ—Ä–∞–∑–¥–æ –≤–∞–∂–Ω–µ–µ –ø–æ—Ä—è–¥–æ–∫, —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å, —Å–µ–º—å—è. –ü—Ä–∏ —ç—Ç–æ–º –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—å –∑–Ω–∞–∫–∞ –æ—á–µ–Ω—å —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω –∫ —ç–Ω–µ—Ä–≥–∏–∏ –æ–∫—Ä—É–∂–∞—é—â–∏—Ö. –•–æ—Ç—å —Ä–∞–∑—É–º –∏ –±–µ—Ä–µ—Ç –≤–µ—Ä—Ö –Ω–∞–¥ —á—É–≤—Å—Ç–≤–∞–º–∏, –î–µ–≤–µ —á–∞—Å—Ç–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—Ä–µ–º—è, —á—Ç–æ–±—ã –ø—Ä–∏–π—Ç–∏ –≤ —Å–µ–±—è –ø–æ—Å–ª–µ –æ–±—â–µ–Ω–∏—è —Å –±–æ–ª—å—à–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –ª—é–¥–µ–π.";
        } else if ((month == 9 && day >= 23) || (month == 10 && day <= 22)) {
            return " –í–µ—Å—ã. –ö –¥–æ—Å—Ç–æ–∏–Ω—Å—Ç–≤–∞–º –í–µ—Å–æ–≤ –º–æ–∂–Ω–æ –æ—Ç–Ω–µ—Å—Ç–∏ –æ–±–∞—è–Ω–∏–µ, –¥—Ä—É–∂–µ–ª—é–±–∏–µ, –æ–±—â–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å, –¥–∏–ø–ª–æ–º–∞—Ç–∏—á–Ω–æ—Å—Ç—å, —Å–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ—Å—Ç—å, —á–µ—Å—Ç–Ω–æ—Å—Ç—å, —Ç–∞–∫—Ç–∏—á–Ω–æ—Å—Ç—å, –∫—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—å, –æ—Å—Ç—Ä—ã–π —É–º, –ª–æ–≥–∏–∫–∞, –ø—Ä–µ–∫—Ä–∞—Å–Ω—ã–π –≤–∫—É—Å. \n" +
                    "\n" +
                    "–ù–µ–¥–æ—Å—Ç–∞—Ç–∫–∏ —É –Ω–∏—Ö —Ç–æ–∂–µ –∏–º–µ—é—Ç—Å—è. –ö –Ω–∏–º –æ—Ç–Ω–æ—Å—è—Ç—Å—è: –Ω–µ–ø–æ—Å—Ç–æ—è–Ω—Å—Ç–≤–æ, –Ω–µ—Ä–µ—à–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å, –Ω–µ—É–º–µ–Ω–∏–µ –ø—Ä–∏–Ω–∏–º–∞—Ç—å —Ä–µ—à–µ–Ω–∏—è, —Å—Ç—Ä–∞—Ö —Å–¥–µ–ª–∞—Ç—å –æ—à–∏–±–∫—É, –æ—Ç–æ—Ä–≤–∞–Ω–Ω–æ—Å—Ç—å –æ—Ç —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏, –Ω–µ–ø—Ä–∞–∫—Ç–∏—á–Ω–æ—Å—Ç—å.";
        } else if ((month == 10 && day >= 23) || (month == 11 && day <= 21)) {
            return " –°–∫–æ—Ä–ø–∏–æ–Ω. –î–æ—Å—Ç–æ–∏–Ω—Å—Ç–≤–∞ –°–∫–æ—Ä–ø–∏–æ–Ω–∞: —Å–∏–ª–∞ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∞, —Å—Ç–æ–π–∫–æ—Å—Ç—å, —É–ø–æ—Ä—Å—Ç–≤–æ, —Ü–µ–ª–µ—É—Å—Ç—Ä–µ–º–ª–µ–Ω–Ω–æ—Å—Ç—å, –∞–º–±–∏—Ü–∏–æ–∑–Ω–æ—Å—Ç—å, –≤–µ—Ä–Ω–æ—Å—Ç—å, –±–µ—Å–∫–æ—Ä—ã—Å—Ç–Ω–æ—Å—Ç—å, —Ç–µ—Ä–ø–µ–Ω–∏–µ, —Å—Ç—Ä–µ–º–ª–µ–Ω–∏–µ –∫ —Å–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤—É, —Å–∏–ª—å–Ω–∞—è –∏–Ω—Ç—É–∏—Ü–∏—è.\n" +
                    "\n" +
                    "–ù–µ–¥–æ—Å—Ç–∞—Ç–∫–∏: –≤–ª–∞—Å—Ç–Ω–æ—Å—Ç—å, —Ä–µ–≤–Ω–æ—Å—Ç—å, –º—Å—Ç–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å, —Å–∫—Ä—ã—Ç–Ω–æ—Å—Ç—å, –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–æ—Å—Ç—å, –æ–±–∏–¥—á–∏–≤–æ—Å—Ç—å, —ç–≥–æ–∏–∑–º.";
        } else if ((month == 11 && day >= 22) || (month == 12 && day <= 21)) {
            return " –°—Ç—Ä–µ–ª–µ—Ü. –°—Ç—Ä–µ–ª—å—Ü—ã –æ—á–µ–Ω—å –≤–ª—é–±—á–∏–≤—ã, –æ–Ω–∏ –≥–æ—Ç–æ–≤—ã –±—ã—Å—Ç—Ä–æ —É–≤–ª–µ–∫–∞—Ç—å—Å—è –∏ –≤—Å–ø—ã—Ö–∏–≤–∞—Ç—å –æ—Ç –Ω–æ–≤—ã—Ö —á—É–≤—Å—Ç–≤. –ì–ª–∞–≤–Ω—ã–º –º–∏–Ω—É—Å–æ–º —ç—Ç–∏—Ö —Ä–æ–º–∞–Ω—Ç–∏–∫–æ–≤ —è–≤–ª—è–µ—Ç—Å—è –Ω–µ–ø–æ—Å—Ç–æ—è–Ω—Å—Ç–≤–æ. –°—Ç—Ä–µ–ª—å—Ü—ã –º–æ–≥—É—Ç –¥–æ–ª–≥–æ–µ –≤—Ä–µ–º—è –∏–¥–µ–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø–∞—Ä—Ç–Ω–µ—Ä–∞, –∞ –ø–æ—Ç–æ–º –ø–æ —â–µ–ª—á–∫—É ¬´–ø—Ä–æ–∑—Ä–µ—Ç—å¬ª. –ï—Å–ª–∏ –Ω–µ—Å—á–∞—Å—Ç–Ω—ã–π –∏–∑–≥–Ω–∞–Ω —Å –ø—å–µ–¥–µ—Å—Ç–∞–ª–∞, —Ç–æ –µ–º—É –Ω–µ –ø–æ–∑–¥–æ—Ä–æ–≤–∏—Ç—Å—è.\n" +
                    "\n" +
                    "–û–±–∏–¥—á–∏–≤–æ—Å—Ç—å –°—Ç—Ä–µ–ª—å—Ü–æ–≤ –º–æ–∂–µ—Ç –ø–æ—Ä–æ–∂–¥–∞—Ç—å –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã. –ú—É–∑–µ –°—Ç—Ä–µ–ª—å—Ü–∞ —Å—Ç–æ–∏—Ç –ø—Ä–∏–≥–æ—Ç–æ–≤–∏—Ç—å—Å—è –∫ –Ω–µ –≤—Å–µ–≥–¥–∞ –æ–ø—Ä–∞–≤–¥–∞–Ω–Ω–æ–π —Ä–µ–≤–Ω–æ—Å—Ç–∏. –í —Ç–æ –∂–µ –≤—Ä–µ–º—è, –≤ –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö –°—Ç—Ä–µ–ª—å—Ü—ã —â–µ–¥—Ä—ã –Ω–∞ –ª–∞—Å–∫—É, –ø—Ä–µ–∑–µ–Ω—Ç—ã –∏ —Ç–µ–ø–ª—ã–µ —Å–ª–æ–≤–∞.";
        } else if ((month == 12 && day >= 22) || (month == 1 && day <= 19)) {
            return " –ö–æ–∑–µ—Ä–æ–≥ \n" +
                    "–î–æ—Å—Ç–æ–∏–Ω—Å—Ç–≤–∞:\n" +
                    "\n" +
                    "–°–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –∫ —Å–∞–º–æ–¥–∏—Å—Ü–∏–ø–ª–∏–Ω–µ, —Ä–µ—à–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å, –ø—Ä–∞–∫—Ç–∏—á–Ω–æ—Å—Ç—å, –∞–º–±–∏—Ü–∏–æ–∑–Ω–æ—Å—Ç—å, —Ä–∞—Å—á–µ—Ç–ª–∏–≤–æ—Å—Ç—å, —É–ø–æ—Ä—Å—Ç–≤–æ –≤ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏ —Ü–µ–ª–∏, –ø—Ä–æ–Ω–∏—Ü–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å, –ø–æ—Å—Ç–æ—è–Ω—Å—Ç–≤–æ, —Ç—Ä—É–¥–æ–ª—é–±–∏–µ, –≤–µ–∂–ª–∏–≤–æ—Å—Ç—å.\n" +
                    "\n" +
                    "–ù–µ–¥–æ—Å—Ç–∞—Ç–∫–∏:\n" +
                    "\n" +
                    "–°–≤–æ–µ–Ω—Ä–∞–≤–Ω–æ—Å—Ç—å, –≤–ª–∞—Å—Ç–æ–ª—é–±–∏–µ, –∫–æ–≤–∞—Ä—Å—Ç–≤–æ, –∂–µ—Å—Ç–æ–∫–æ—Å—Ç—å, –ª—é–±–æ–≤—å –∫ —Ä–æ—Å–∫–æ—à–∏ –∏ –∫–æ–º—Ñ–æ—Ä—Ç—É. –ù–µ –≥–æ—Ç–æ–≤—ã –ø–æ–¥–ø—É—Å–∫–∞—Ç—å –∫ —Å–µ–±–µ –Ω–æ–≤—ã—Ö –ª—é–¥–µ–π.";
        } else if ((month == 1 && day >= 20) || (month == 2 && day <= 18)) {
            return " –í–æ–¥–æ–ª–µ–π. –ï—Å–ª–∏ –≥–æ–≤–æ—Ä–∏—Ç—å –æ —Å–∏–ª—å–Ω—ã—Ö —Å—Ç–æ—Ä–æ–Ω–∞—Ö –í–æ–¥–æ–ª–µ—è, —Ç–æ, –≤ –ø–µ—Ä–≤—É—é –æ—á–µ—Ä–µ–¥—å, —ç—Ç–æ –µ–≥–æ —Ü–µ–ª–µ—É—Å—Ç—Ä–µ–º–ª–µ–Ω–Ω–æ—Å—Ç—å, —É–º–µ–Ω–∏–µ –Ω–∞–π—Ç–∏ –≤—ã—Ö–æ–¥ –∏–∑ –ª—é–±–æ–π —Å–ª–æ–∂–Ω–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏, –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –∑–∞ —Å–µ–±—è –∏ —Å–≤–æ–∏—Ö –±–ª–∏–∑–∫–∏—Ö. –ü—Ä–∏—á–µ–º –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã –í–æ–¥–æ–ª–µ–∏ –≤–æ –≤—Å–µ–º ‚Äî –Ω–∞ —Ä–∞–±–æ—Ç–µ, –ø–µ—Ä–µ–¥ –Ω–∞—á–∞–ª—å—Å—Ç–≤–æ–º, –ø–µ—Ä–µ–¥ –¥—Ä—É–∑—å—è–º–∏, –∞ –≥–ª–∞–≤–Ω–æ–µ ‚Äî –ø–µ—Ä–µ–¥ —Å–≤–æ–µ–π —Å–µ–º–µ–π. –ê –µ—â–µ –í–æ–¥–æ–ª–µ–∏ –¥–æ–≤–æ–ª—å–Ω–æ —á–∞—Å—Ç–æ –±—ã–≤–∞—é—Ç –ø—Ä–µ–∫—Ä–∞—Å–Ω—ã–º–∏ —Ä–æ–¥–∏—Ç–µ–ª—è–º–∏, –∫–æ—Ç–æ—Ä—ã–µ —É–º–µ—é—Ç –Ω–∞–π—Ç–∏ –ø–æ–¥—Ö–æ–¥ –∫ —Å–≤–æ–∏–º –¥–µ—Ç—è–º, –Ω–µ –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞—è—Å—å —Å–∫—É—á–Ω—ã–º–∏ —à—Ç–∞–º–ø–∞–º–∏ –∏–∑ –∫–Ω–∏–≥ –ø–æ –≤–æ—Å–ø–∏—Ç–∞–Ω–∏—é.";
        } else {
            return " –†—ã–±—ã. –ì–ª–∞–≤–Ω—ã–º –¥–æ—Å—Ç–æ–∏–Ω—Å—Ç–≤–æ–º –†—ã–± –≤ –Ω–∞—à–µ –≤—Ä–µ–º—è —è–≤–ª—è–µ—Ç—Å—è —á–µ—Å—Ç–Ω–æ—Å—Ç—å. –î–∞–∂–µ –µ—Å–ª–∏ –≤ –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö —Å–ª—É—á–∞—è—Ö –±—É–¥–µ—Ç –≤—ã–≥–æ–¥–Ω–æ —Å–æ–ª–≥–∞—Ç—å, –≤ —Å–∏–ª—É –∏—Ö –¥–æ–±—Ä–æ–ø–æ—Ä—è–¥–æ—á–Ω–æ—Å—Ç–∏ —ç—Ç–æ–≥–æ –Ω–µ —Å–ª—É—á–∏—Ç—Å—è.\n" +
                    "\n" +
                    "–¢—Ä—É–¥–æ–ª—é–±–∏–µ –ø—Ä–∏—Å—É—â–µ –†—ã–±–∞–º, –Ω–æ —Ç–æ–ª—å–∫–æ —Ç–æ–≥–¥–∞, –∫–æ–≥–¥–∞ –Ω–∏–∫—Ç–æ –Ω–µ –≤–∏–¥–∏—Ç. –¢–∞–∫ –∫–∞–∫ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª–∏ —ç—Ç–æ–≥–æ –∑–Ω–∞–∫–∞ ‚Äî —Ç–≤–æ—Ä—á–µ—Å–∫–∏–µ –Ω–∞—Ç—É—Ä—ã, –¥–ª—è —Ä–∞–±–æ—Ç—ã –∏–º –Ω—É–∂–Ω–æ —É–µ–¥–∏–Ω–∏—Ç—å—Å—è. –í–æ–¥–Ω—ã–µ –∑–Ω–∞–∫–∏ –Ω–µ –ª—é–±—è—Ç –¥–µ–ª–∞—Ç—å —á—Ç–æ-—Ç–æ –Ω–∞–ø–æ–∫–∞–∑, –ø–æ—ç—Ç–æ–º—É –∏ —Ç—Ä—É–¥–∏—Ç—å—Å—è –ø—Ä–∏–≤—ã–∫–ª–∏ –≤ –æ–¥–∏–Ω–æ—á–∫—É.";
        }

//
    }
    private String oven() {
        return " –û–≤–µ–Ω –ª–∏—á–Ω–æ—Å—Ç—å –∫—Ä–∞–π–Ω–µ —Ü–µ–ª–µ—É—Å—Ç—Ä–µ–º–ª—ë–Ω–Ω–∞—è. –ß—Ç–æ –º–æ–∂–Ω–æ –∑–∞–ø–∏—Å–∞—Ç—å –∫–∞–∫ –≤ –ø–ª—é—Å, —Ç–∞–∫ –∏ –≤ –º–∏–Ω—É—Å, –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—é –∑–Ω–∞–∫–∞. –ï—Å–ª–∏ –æ–Ω –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —á–µ–º-—Ç–æ —É–≤–ª–µ—á—ë–Ω, –æ–Ω, –±–µ–∑ –ø—Ä–µ—É–≤–µ–ª–∏—á–µ–Ω–∏—è, –≥–æ—Ç–æ–≤ –Ω–∞ –≤—Å—ë —Ä–∞–¥–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Ü–µ–ª–∏. –ì–ª–∞–≤–Ω–æ–µ ‚Äî —É—Å–ø–µ—Ç—å –µ—ë –¥–æ—Å—Ç–∏—á—å –¥–æ —É—Ç—Ä–∞—Ç—ã –∏–Ω—Ç–µ—Ä–µ—Å–∞.";
    }
//    private String telec() {
//        return
//    }
//    private String blizneci() {
//        return
//    }
//
//    private String rak() {
//        return
//    }
//    private String lion() {
//
//    }
//    private String deva() {
//        return
//    }
//    private String veci() {
//        return
//    }

    }
